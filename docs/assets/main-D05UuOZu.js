(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();const b=11;function N(o){return o%2===0?6:5}const V=(()=>{const o=[0];for(let t=1;t<b;t++){const e=o[t-1];o.push(e+(t%2===1?4:3))}return o})(),J=(()=>{const o=[0];for(let t=1;t<b;t++){const e=N(t-1);o.push(o[t-1]+e)}return o})();let j="intervals";function W(){return j==="chromatic"?J:V}function H(o){if(o!=="intervals"&&o!=="chromatic")throw new Error(`Invalid grid mode: ${o}. Must be 'intervals' or 'chromatic'.`);j=o}const B=new Proxy({},{get(o,t){const e=W();if(t==="length")return e.length;const n=parseInt(t);return isNaN(n)?e[t]:e[n]}});function C(o,t){return B[o]+t}function Y(o){for(let t=0;t<b;t++)if(o>=B[t]){const e=o-B[t];if(e>=0&&e<N(t))return{row:t,col:e}}throw new Error(`Invalid pad index: ${o}`)}function X(o,t,e=48){return e+C(o,t)}const L={portrait:{w:38,h:33}};function $(o,t,e=48){const n=L.portrait,i=t*n.w+(o%2?n.w/2:0)+e,s=(b-1-o)*n.h+e;return{x:i,y:s}}function K(o,t,e){return[[0,-e],[.866*e,-.5*e],[.866*e,.5*e],[0,+e],[-.866*e,.5*e],[-.866*e,-.5*e]].map(([i,s])=>`${o+i},${t+s}`).join(" ")}function Q(o="portrait"){const t=L.portrait,e=6*t.w+120,n=b*t.h+120;return o==="portrait"?{width:e,height:n,viewBox:`0 0 ${e} ${n}`}:{width:n,height:e,viewBox:`0 0 ${n} ${e}`}}function q(o,t,e,n){const{x:i,y:s}=$(o,t),{x:a,y:r}=$(e,n);return Math.sqrt((a-i)**2+(r-s)**2)/L.portrait.w}const Z={C:0,"C#":1,Db:1,D:2,"D#":3,Eb:3,E:4,F:5,"F#":6,Gb:6,G:7,"G#":8,Ab:8,A:9,"A#":10,Bb:10,B:11},tt={maj:{name:"Major scale",intervals:[0,2,4,5,7,9,11],type:"scale"},natmin:{name:"Natural minor",intervals:[0,2,3,5,7,8,10],type:"scale"},harmin:{name:"Harmonic minor",intervals:[0,2,3,5,7,8,11],type:"scale"},melmin:{name:"Melodic minor",intervals:[0,2,3,5,7,9,11],type:"scale"},dorian:{name:"Dorian",intervals:[0,2,3,5,7,9,10],type:"scale"},phrygian:{name:"Phrygian",intervals:[0,1,3,5,7,8,10],type:"scale"},lydian:{name:"Lydian",intervals:[0,2,4,6,7,9,11],type:"scale"},mixolydian:{name:"Mixolydian",intervals:[0,2,4,5,7,9,10],type:"scale"},locrian:{name:"Locrian",intervals:[0,1,3,5,6,8,10],type:"scale"},majpent:{name:"Major pentatonic",intervals:[0,2,4,7,9],type:"scale"},minpent:{name:"Minor pentatonic",intervals:[0,3,5,7,10],type:"scale"},majtriad:{name:"Major triad",intervals:[0,4,7],type:"chord"},mintriad:{name:"Minor triad",intervals:[0,3,7],type:"chord"},augtriad:{name:"Augmented triad",intervals:[0,4,8],type:"chord"},dimtriad:{name:"Diminished triad",intervals:[0,3,6],type:"chord"},maj7:{name:"Major 7th",intervals:[0,4,7,11],type:"chord"},min7:{name:"Minor 7th",intervals:[0,3,7,10],type:"chord"},dom7:{name:"Dominant 7th",intervals:[0,4,7,10],type:"chord"},dim7:{name:"Diminished 7th",intervals:[0,3,6,9],type:"chord"},hdim7:{name:"Half-diminished 7th",intervals:[0,3,6,10],type:"chord"},maj9:{name:"Major 9th",intervals:[0,4,7,11,14],type:"chord"},min9:{name:"Minor 9th",intervals:[0,3,7,10,14],type:"chord"},dom9:{name:"Dominant 9th",intervals:[0,4,7,10,14],type:"chord"},chromatic:{name:"Chromatic",intervals:[0,1,2,3,4,5,6,7,8,9,10,11],type:"scale"},wholeTone:{name:"Whole tone",intervals:[0,2,4,6,8,10],type:"scale"}};function et(o,t){const e=Z[o];if(e===void 0)throw new Error(`Invalid key: ${o}`);const n=tt[t];if(!n)throw new Error(`Invalid set type: ${t}`);const i=new Set;for(const s of n.intervals)i.add((e+s)%12);return i}function nt(o){const t=new Set;return!o||!o.trim()||o.split(",").forEach(e=>{const n=Number(e.trim());Number.isNaN(n)||t.add((n%12+12)%12)}),t}function w(o){return(o%12+12)%12}const it={enabled:!1,app:!0,midi:!0,grid:!0,handprint:!0,shouldLog(o){return this.enabled&&this[o]}};function p(o,...t){it.shouldLog(o)&&console.log(...t)}function _(...o){console.error(...o)}function st(...o){console.warn(...o)}class rt{constructor(t){this.svg=t,this.orientation="portrait",this.labelMode="pc",this.baseMidi=48,this.highlightedPCs=new Set,this.fingeringPattern=null,this.fingeringMode=!1,this.onPadClick=null}setOrientation(t){this.orientation=t}setLabelMode(t){this.labelMode=t}setBaseMidi(t){this.baseMidi=t}setHighlightedPCs(t){this.highlightedPCs=t}setFingeringPattern(t){this.fingeringPattern=t}setFingeringMode(t){this.fingeringMode=t}setPadClickHandler(t){this.onPadClick=t}render(){p("grid","[GridRenderer] render() called",{svg:this.svg,orientation:this.orientation,labelMode:this.labelMode});const t=Q(this.orientation);this.svg.setAttribute("viewBox",t.viewBox),this.svg.innerHTML="";const e=document.createElementNS("http://www.w3.org/2000/svg","g");this.orientation==="landscape"&&e.setAttribute("transform",`translate(${t.width},0) rotate(90)`);let n=0;for(let i=0;i<b;i++){const s=N(i);for(let a=0;a<s;a++)this._renderPad(e,i,a),n++}p("grid",`[GridRenderer] Rendered ${n} pads`),this.svg.appendChild(e),p("grid","[GridRenderer] Grid appended to SVG")}_renderPad(t,e,n){const{x:i,y:s}=$(e,n),a=X(e,n,this.baseMidi),r=w(a),d=document.createElementNS("http://www.w3.org/2000/svg","polygon");if(d.setAttribute("points",K(i,s,22)),d.setAttribute("class","pad"),d.setAttribute("stroke","#666"),d.setAttribute("fill","#6aa5ff"),d.setAttribute("fill-opacity","0.12"),this.highlightedPCs.has(r)&&d.classList.add("on"),this.fingeringMode&&d.classList.add("fingering-mode"),d.addEventListener("click",()=>{this.onPadClick&&this.onPadClick(e,n,a,r)}),t.appendChild(d),this._renderLabel(t,i,s,a,r),this.fingeringPattern){const c=this.fingeringPattern.getFingering(e,n);c&&this._renderFingering(t,i,s,c)}}_renderLabel(t,e,n,i,s){const a=this._getLabelText(i,s),r=document.createElementNS("http://www.w3.org/2000/svg","text");r.setAttribute("x",e),r.setAttribute("y",n+4),r.setAttribute("text-anchor","middle"),r.setAttribute("class","label"),this.orientation==="landscape"&&r.setAttribute("transform",`rotate(-90 ${e} ${n})`),r.textContent=a,t.appendChild(r)}_renderFingering(t,e,n,i){const s=document.createElementNS("http://www.w3.org/2000/svg","text");s.setAttribute("x",e),s.setAttribute("y",n-8),s.setAttribute("text-anchor","middle"),s.setAttribute("class",`fing ${i.hand}`),this.orientation==="landscape"&&s.setAttribute("transform",`rotate(-90 ${e} ${n})`),s.textContent=i.finger,t.appendChild(s)}_getLabelText(t,e){switch(this.labelMode){case"pc":return e;case"note":return this._midiToNoteName(t);case"midi":return t;default:return e}}_midiToNoteName(t){const e=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],n=w(t);return e[n]}}class ot{constructor(){this.midiAccess=null,this.selectedOutput=null,this.isSupported=typeof navigator<"u"&&"requestMIDIAccess"in navigator,this.activeNotes=new Map,this.holdDuration=1e3,this.octaveRange=0,this.isHolding=!1}async init(){if(!this.isSupported)throw new Error("WebMIDI not supported in this browser");try{return p("midi","[MIDI] Requesting MIDI access with SysEx permission..."),this.midiAccess=await navigator.requestMIDIAccess({sysex:!0}),p("midi","[MIDI] ✓ MIDI access granted with SysEx support"),this.midiAccess.onstatechange=()=>{this._onDeviceStateChange()},!0}catch(t){throw _("[MIDI] ✗ MIDI initialization failed:",t),new Error(`MIDI initialization failed: ${t.message}`)}}getOutputDevices(){return this.midiAccess?Array.from(this.midiAccess.outputs.values()).map(t=>({id:t.id,name:t.name})):[]}selectOutputDevice(t){if(!this.midiAccess)return!1;const e=this.midiAccess.outputs.get(t);return e?(this.selectedOutput=e,!0):!1}setHoldDuration(t){this.holdDuration=Math.max(100,Math.min(t,3e4))}setOctaveRange(t){this.octaveRange=Math.max(0,Math.min(t,2))}noteOn(t,e=100){if(!(!this.selectedOutput||t<0||t>127))try{this.selectedOutput.send([144,t,e])}catch(n){console.error("MIDI send error:",n)}}noteOff(t){if(!(!this.selectedOutput||t<0||t>127))try{this.selectedOutput.send([128,t,0])}catch(e){console.error("MIDI send error:",e)}}playNote(t,e=100,n=null){const i=n!==null?n:this.holdDuration;this._getOctaveNotes(t).forEach(a=>{this.noteOn(a,e),this.isHolding?this.activeNotes.set(a,{velocity:e,time:Date.now()}):setTimeout(()=>{this.noteOff(a)},i)})}playChord(t,e=100,n=null,i=0){t.forEach((s,a)=>{setTimeout(()=>{this.playNote(s,e,n)},a*i)})}enableHold(){this.isHolding=!0,this.activeNotes.clear()}disableHold(){this.isHolding=!1,this.releaseAllNotes()}releaseAllNotes(){for(const[t]of this.activeNotes)this.noteOff(t);this.activeNotes.clear()}allNotesOff(){if(this.selectedOutput){try{for(let t=0;t<16;t++)this.selectedOutput.send([176+t,123,0])}catch(t){console.error("MIDI send error:",t)}this.activeNotes.clear()}}_getOctaveNotes(t){const e=[t];for(let n=1;n<=this.octaveRange;n++){const i=t+12*n,s=t-12*n;i<=127&&e.push(i),s>=0&&e.push(s)}return e}_onDeviceStateChange(){this.selectedOutput&&(this.midiAccess.outputs.get(this.selectedOutput.id)||(this.selectedOutput=null))}setNoteHandler(t,e=!1){if(this.noteHandler=t,this.devModeActive=e,this.midiAccess){const n=this.midiAccess.inputs.values();for(const i of n)t?i.onmidimessage=s=>this._handleMidiInput(s):i.onmidimessage=null}}_handleMidiInput(t){const[e,n,i]=t.data,s=e&240,a=e&15;if(this.devModeActive&&p("midi","[MIDI IN] Status:",e.toString(16).padStart(2,"0").toUpperCase(),"Channel:",a,"Note/Data1:",n,"Velocity/Data2:",i,"Type:",s.toString(16).padStart(2,"0").toUpperCase()),this.devModeActive&&a===15){if(p("midi","[DEV MODE] Channel 16 message detected! Pad ID:",n,"Velocity:",i),s===144||s===128){const r=s===128?0:i,d=n;p("midi","[DEV MODE] Triggering handler with pad ID:",d,"velocity:",r),this.noteHandler&&this.noteHandler(d,r)}return}if(s===144||s===128){const r=s===128?0:i;p("midi","[NORMAL MODE] Note event - Note:",n,"Velocity:",r),this.noteHandler&&this.noteHandler(n,r)}}sendSysEx(t){if(!this.selectedOutput){st("[SYSEX] ⚠️ No MIDI output device selected - cannot send SysEx");return}const e=t.map(n=>n.toString(16).padStart(2,"0").toUpperCase()).join(" ");p("midi",`[SYSEX] Sending to ${this.selectedOutput.name}:`,e);try{this.selectedOutput.send(t),p("midi","[SYSEX] ✓ Sent successfully")}catch(n){_("[SYSEX] ✗ Send error:",n)}}enterExquisDeveloperMode(){p("midi","[DEV MODE] 🔧 Entering Exquis Developer Mode...");const t=[240,0,33,126,127,0,1,247];this.sendSysEx(t),p("midi","[DEV MODE] ✓ Developer Mode command sent (pads should now send pad IDs on channel 16)")}exitExquisDeveloperMode(){p("midi","[DEV MODE] 🔧 Exiting Exquis Developer Mode...");const t=[240,0,33,126,127,0,0,247];this.sendSysEx(t),p("midi","[DEV MODE] ✓ Exit command sent (pads should return to normal mode)")}getStatus(){var e;const t={isSupported:this.isSupported,isInitialized:this.midiAccess!==null,hasDevice:this.selectedOutput!==null,deviceName:((e=this.selectedOutput)==null?void 0:e.name)||null,isHolding:this.isHolding,activeNoteCount:this.activeNotes.size,holdDuration:this.holdDuration,octaveRange:this.octaveRange};return t.isEnabled=t.isInitialized,t}_oldGetStatus(){var t;return{isSupported:this.isSupported,isInitialized:this.midiAccess!==null,hasDevice:this.selectedOutput!==null,deviceName:((t=this.selectedOutput)==null?void 0:t.name)||null,isHolding:this.isHolding,activeNoteCount:this.activeNotes.size,holdDuration:this.holdDuration,octaveRange:this.octaveRange}}}const m=new ot;class S{constructor(t="Untitled"){this.name=t,this.fingerings=new Map,this.metadata={key:null,setType:null,baseMidi:48,createdAt:Date.now(),modifiedAt:Date.now()}}setFingering(t,e,n,i){const s=`${t},${e}`;this.fingerings.set(s,{hand:n,finger:i}),this.metadata.modifiedAt=Date.now()}getFingering(t,e){const n=`${t},${e}`;return this.fingerings.get(n)||null}removeFingering(t,e){const n=`${t},${e}`;this.fingerings.delete(n),this.metadata.modifiedAt=Date.now()}clearAll(){this.fingerings.clear(),this.metadata.modifiedAt=Date.now()}getPadsForHand(t){const e=[];for(const[n,i]of this.fingerings)if(i.hand===t){const[s,a]=n.split(",").map(Number);e.push({row:s,col:a,finger:i.finger})}return e}getPadsForFinger(t,e=null){const n=[];for(const[i,s]of this.fingerings)if(s.finger===t&&(!e||s.hand===e)){const[a,r]=i.split(",").map(Number);n.push({row:a,col:r,hand:s.hand})}return n}toJSON(){return{name:this.name,fingerings:Array.from(this.fingerings.entries()),metadata:this.metadata}}static fromJSON(t){const e=new S(t.name);return e.fingerings=new Map(t.fingerings),e.metadata=t.metadata,e}}class at{constructor(){this.fingerWeights={1:.8,2:1,3:.9,4:.6,5:.4},this.handSizes={small:{maxStretch:2.5,comfortableStretch:1.5},medium:{maxStretch:3,comfortableStretch:2},large:{maxStretch:3.5,comfortableStretch:2.5}},this.currentHandSize="medium"}setHandSize(t){t==="custom"?this.currentHandSize="custom":this.handSizes[t]&&(this.currentHandSize=t)}setCustomHandprint(t){const e=Object.values(t),n=Math.max(...e),i=e.reduce((s,a)=>s+a,0)/e.length;this.handSizes.custom={maxStretch:n*1.1,comfortableStretch:i,measurements:t},this.currentHandSize="custom"}analyzePattern(t){let e=100;const n=[];return["left","right"].forEach(i=>{const s=t.getPadsForHand(i);if(s.length===0)return;const a=this._analyzeSpan(s,i,n);e-=a;const r=this._analyzeFingerStrength(s,n);e+=r;const d=this._analyzeFingerCrossings(s,i,n);e-=d}),{score:Math.max(0,Math.min(100,e)),issues:n,recommendation:this._getRecommendation(e)}}suggestFingerings(t,e,n=48){if(t.length===0)return[];const i=new Map;t.forEach(r=>{const d=C(r.row,r.col),c=n+d,l=c%12;if(!i.has(l))i.set(l,{...r,pc:l,midiNote:c});else{const u=i.get(l);(r.row<u.row||r.row===u.row&&r.col<u.col)&&i.set(l,{...r,pc:l,midiNote:c})}});const s=Array.from(i.values());let a=s;return s.length>5&&(a=[...s].sort((r,d)=>{const c=r.row*2+r.col,l=d.row*2+d.col;return c-l}).slice(0,5)),this._assignFingersAnatomically(a,e)}_assignFingersAnatomically(t,e){if(t.length===0)return[];const i=[...t].sort((c,l)=>c.row!==l.row?c.row-l.row:e==="right"?c.col-l.col:l.col-c.col)[0],s=[];s.push({row:i.row,col:i.col,hand:e,finger:1,score:1});const a=t.filter(c=>!(c.row===i.row&&c.col===i.col));if(a.length===0)return s;const r=a.map(c=>{const l=c.row-i.row,u=c.col-i.col,h=Math.sqrt(l*l+u*u),f=e==="right"?l+u:l-u;return{pad:c,distance:h,directionScore:f,score:f*2-h*.5}}).sort((c,l)=>l.score-c.score),d=[2,3,4,5];return r.slice(0,4).forEach((c,l)=>{s.push({row:c.pad.row,col:c.pad.col,hand:e,finger:d[l],score:.8})}),s}_analyzeSpan(t,e,n){const i=this.handSizes[this.currentHandSize];let s=0;const a=[...t].sort((r,d)=>r.finger-d.finger);for(let r=0;r<a.length-1;r++){const d=a[r],c=a[r+1];if(d.finger===c.finger)continue;const l=q(d.row,d.col,c.row,c.col);l>i.maxStretch?(s+=20,n.push({type:"excessive_stretch",hand:e,fingers:[d.finger,c.finger],distance:l})):l>i.comfortableStretch&&(s+=5,n.push({type:"uncomfortable_stretch",hand:e,fingers:[d.finger,c.finger],distance:l}))}return s}_analyzeFingerStrength(t,e){let n=0;return t.forEach(i=>{const s=this.fingerWeights[i.finger];s>=.9?n+=2:s<=.5&&(n-=1)}),n}_analyzeFingerCrossings(t,e,n){let i=0;const s=new Set,a=[...t].sort((r,d)=>r.finger-d.finger);for(let r=0;r<a.length-1;r++){const d=a[r],c=a[r+1],l=`${d.finger}-${c.finger}`;s.has(l)||d.row>c.row&&(i+=5,s.add(l),n.push({type:"finger_crossing",hand:e,fingers:[d.finger,c.finger]}))}return i}_getRecommendation(t){return t>=90?"Excellent ergonomics!":t>=75?"Good fingering, comfortable to play":t>=60?"Acceptable, but could be improved":t>=40?"Uncomfortable, consider revising":"Poor ergonomics, recommend different fingering"}_suggestMultiHandFingering(t){const e=Math.floor(t.length/2),n=t.slice(0,e),i=t.slice(e);return[...this.suggestFingerings(n,"left"),...this.suggestFingerings(i,"right")]}}const P=new at,x={PATTERNS:"exquisPatterns",SETTINGS:"exquisSettings",RECENT_PATTERNS:"exquisRecentPatterns"};function dt(o,t){const e=D();e[o]={...t,savedAt:Date.now()},localStorage.setItem(x.PATTERNS,JSON.stringify(e)),ht(o)}function ct(o){return D()[o]||null}function lt(o){const t=D();return t[o]?(delete t[o],localStorage.setItem(x.PATTERNS,JSON.stringify(t)),pt(o),!0):!1}function D(){try{const o=localStorage.getItem(x.PATTERNS);return o?JSON.parse(o):{}}catch(o){return console.error("Error loading patterns:",o),{}}}function gt(){return Object.keys(D()).sort()}function I(o){localStorage.setItem(x.SETTINGS,JSON.stringify(o))}function ut(){try{const o=localStorage.getItem(x.SETTINGS);return o?JSON.parse(o):z()}catch(o){return console.error("Error loading settings:",o),z()}}function z(){return{orientation:"portrait",labelMode:"pc",baseMidi:48,midiHoldDuration:1e3,midiOctaveRange:0,handSize:"medium",theme:"light"}}function ht(o){let t=G();t=t.filter(e=>e!==o),t.unshift(o),t=t.slice(0,10),localStorage.setItem(x.RECENT_PATTERNS,JSON.stringify(t))}function pt(o){let t=G();t=t.filter(e=>e!==o),localStorage.setItem(x.RECENT_PATTERNS,JSON.stringify(t))}function G(){try{const o=localStorage.getItem(x.RECENT_PATTERNS);return o?JSON.parse(o):[]}catch{return[]}}function mt(o,t,e){const n=[];function i(s,a){const r=a.length;if(r>=t&&r<=e&&n.push([...a]),r!==e)for(let d=s;d<o.length;d++)a.push(o[d]),i(d+1,a),a.pop()}return i(0,[]),n}function ft(o,t,e=48,n=null){const i=new Set(o),s=[],a=n?t.filter(r=>r.hand===n):t;for(const r of a){const d=mt(r.positions,3,5);for(const c of d){const l=r.baseMidi||e,u=c.map(f=>{const v=C(f.row,f.col),E=l+v;return w(E)}),h=new Set(u);if([...i].every(f=>h.has(f))&&h.size>=i.size){const f={handprintId:r.id,hand:r.hand,comfortRating:r.comfortRating||50,baseMidi:l,midiDevice:r.midiDevice,capturedAt:r.capturedAt,positions:c.map(v=>{const E=C(v.row,v.col),M=l+E;return{row:v.row,col:v.col,padIndex:E,midiNote:M,finger:v.finger,pitchClass:w(M)}}),score:0,geometricScore:0,ergonomicScore:0};s.push(f)}}}return s}function yt(o){const t=o.map(e=>e.finger).sort((e,n)=>e-n);for(let e=1;e<t.length;e++)if(t[e]!==t[e-1]+1)return!1;return!0}function vt(o){let t=0;for(let e=0;e<o.length;e++)for(let n=e+1;n<o.length;n++){const i=o[n].col-o[e].col,s=o[n].row-o[e].row,a=Math.sqrt(i*i+s*s);t=Math.max(t,a)}return t}function St(o){const t=Et(o),e=It(o),n=xt(o),i=t*.4+e*.3+n*.3;return{...o,score:Math.round(i),comfortScore:Math.round(t),geometricScore:Math.round(e),ergonomicScore:Math.round(n)}}function Et(o){return o.comfortRating||50}function It(o){const t=vt(o.positions);let e;t<=3?e=100:t<=5?e=100-(t-3)*15:t<=7?e=70-(t-5)*15:e=Math.max(0,40-(t-7)*10);const n=o.positions.map(d=>d.row),i=Math.min(...n),a=Math.max(...n)-i,r=a<=2?100:Math.max(0,100-(a-2)*20);return(e+r)/2}function xt(o){let t=50;yt(o.positions)&&(t+=30);const e=o.positions.length;e===3||e===4?t+=20:e===5&&(t+=10);const n=o.positions.map(i=>i.finger).sort((i,s)=>i-s);return n.includes(1)&&n.includes(5)&&!n.includes(2)&&!n.includes(3)&&!n.includes(4)&&(t-=30),n.length===2&&n[0]===1&&n[1]===5&&(t-=20),Math.max(0,Math.min(100,t))}function Ct(o){return o.map(t=>St(t)).sort((t,e)=>e.score-t.score)}function bt(o,t=null){const e=t?o.filter(r=>r.hand===t):o;if(e.length===0)return null;const n={hand:t,fingerDistances:{},spanDistances:[],fingerAssignments:{},chordShapes:[],avgComfort:0};let i=0;for(const r of e){if(i+=r.comfortRating||50,r.measurements)for(const[u,h]of Object.entries(r.measurements))n.fingerDistances[u]||(n.fingerDistances[u]=[]),n.fingerDistances[u].push(h);const d=r.positions;let c=0;for(let u=0;u<d.length;u++)for(let h=u+1;h<d.length;h++){const f=d[h].col-d[u].col,v=d[h].row-d[u].row,E=Math.sqrt(f*f+v*v);c=Math.max(c,E)}n.spanDistances.push(c);for(const u of d){const h=`r${u.row}c${u.col}`;n.fingerAssignments[h]||(n.fingerAssignments[h]={});const f=u.finger;n.fingerAssignments[h][f]=(n.fingerAssignments[h][f]||0)+1}const l=Mt(r);l&&n.chordShapes.push(l)}n.avgComfort=i/e.length;for(const[r,d]of Object.entries(n.fingerDistances)){const c=d.reduce((u,h)=>u+h,0)/d.length,l=d.reduce((u,h)=>u+Math.pow(h-c,2),0)/d.length;n.fingerDistances[r]={avg:c,stdDev:Math.sqrt(l),samples:d.length}}const s=n.spanDistances.reduce((r,d)=>r+d,0)/n.spanDistances.length,a=n.spanDistances.reduce((r,d)=>r+Math.pow(d-s,2),0)/n.spanDistances.length;return n.avgSpan=s,n.spanStdDev=Math.sqrt(a),n}function Mt(o){const t=o.positions;if(t.length<3)return null;const e=[...t].sort((s,a)=>s.finger-a.finger),n=e[0],i=e.map(s=>({finger:s.finger,rowOffset:s.row-n.row,colOffset:s.col-n.col,distance:Math.sqrt(Math.pow(s.row-n.row,2)+Math.pow(s.col-n.col,2))}));return{numFingers:t.length,fingers:e.map(s=>s.finger),geometry:i,comfort:o.comfortRating||50}}function wt(o,t,e){const n=`r${o}c${t}`,i=e.fingerAssignments[n];if(!i)return null;let s=null,a=0;for(const[r,d]of Object.entries(i))d>a&&(a=d,s=parseInt(r));return s}function Pt(o,t){if(!t||t.chordShapes.length===0)return 50;let e=0;for(const n of t.chordShapes){let i=0;o.positions.length===n.numFingers&&(i+=20);const s=Dt(o.positions),a=Math.abs(s-t.avgSpan),r=Math.max(0,30-a*10);i+=r,i+=n.comfort/2,e=Math.max(e,i)}return Math.min(100,e)}function Dt(o){let t=0;for(let e=0;e<o.length;e++)for(let n=e+1;n<o.length;n++){const i=o[n].col-o[e].col,s=o[n].row-o[e].row,a=Math.sqrt(i*i+s*s);t=Math.max(t,a)}return t}function Ht(o,t=48,e=5){const n=new Map;for(const r of o)n.set(r,[]);for(let r=0;r<=e;r++)for(let d=0;d<(r%2===0?6:5);d++){const c=C(r,d),l=t+c,u=w(l);n.has(u)&&n.get(u).push({row:r,col:d,padIndex:c,midiNote:l,pc:u})}const i=[],s=Array.from(n.keys());function a(r,d){if(r===s.length){i.push([...d]);return}const c=s[r],u=n.get(c).slice(0,3);for(const h of u)d.push(h),a(r+1,d),d.pop()}return a(0,[]),i}function Bt(o,t,e=null){if(o.length===0)return[];o.length>5&&(o=o.slice(0,5));const n=[...o].sort((a,r)=>a.row!==r.row?a.row-r.row:t==="right"?a.col-r.col:r.col-a.col),i=new Set,s=[];for(let a=0;a<n.length;a++){const r=n[a];let d=null;if(e){const c=wt(r.row,r.col,e);c&&!i.has(c)&&(d=c)}if(!d){for(let c=1;c<=5;c++)if(!i.has(c)){d=c;break}}d&&(i.add(d),s.push({...r,finger:d,hand:t}))}return s}function $t(o,t){let e=50;if(t){const s=Pt(o,t);e=(e+s)/2}const n=Nt(o.positions);n<1.5?e+=10:n<=3?e+=5:n>4&&(e-=20);const i=o.positions.reduce((s,a)=>s+a.row,0)/o.positions.length;return e+=Math.max(0,10-i*2),Math.min(100,Math.max(0,e))}function Nt(o){let t=0;for(let e=0;e<o.length;e++)for(let n=e+1;n<o.length;n++){const i=q(o[e].row,o[e].col,o[n].row,o[n].col);t=Math.max(t,i)}return t}function Lt(o,t,e=48,n="right",i=5){const s=bt(t,n),a=Ht(o,e);if(a.length===0)return[];const r=a.map(d=>{const c=Bt(d,n,s),l={hand:n,baseMidi:e,positions:c,targetPitchClasses:o,score:0};return l.score=$t(l,s),l});return r.sort((d,c)=>c.score-d.score),r.slice(0,i)}class At{constructor(){p("app","[APP] Constructor started"),H("intervals"),p("app","[APP] Grid mode set to intervals"),this.settings=ut(),this.currentPattern=new S,this.currentFinger=1,this.currentHand="right",this.fingeringMode=!1,this.handprintMode=!1,this.handprintCaptureState=null,this.handprintCaptures=[],this.handprintCaptureHand="right",this.handprintSessionBaseMidi=null,this.handprintSessionID=null,this.handprintSessionCount=0,this.savedHandprints=this.settings.handprints||[],this.currentSuggestions=[],this.currentSuggestionIndex=0,this.currentSuggestionRating=3,this.suggestionEditMode=!1,this.editingPad=null,this.gridElement=document.getElementById("grid"),p("app","[APP] Grid element:",this.gridElement),this.gridRenderer=new rt(this.gridElement),p("app","[APP] GridRenderer created"),this.initUI(),this.loadStoredSettings(),this.updatePatternMetadata(),this.updateHandprintList(),p("app","[APP] About to call initial render()"),this.render(),p("app","[APP] Constructor completed")}initUI(){var a,r,d,c,l,u,h,f,v,E,M,A,k,R,F,O,T;document.querySelectorAll('input[name="ori"]').forEach(g=>{g.addEventListener("change",()=>{this.settings.orientation=g.value,this.render(),I(this.settings)})}),document.querySelectorAll('input[name="lab"]').forEach(g=>{g.addEventListener("change",()=>{this.settings.labelMode=g.value,this.render(),I(this.settings)})}),document.getElementById("key").addEventListener("change",()=>{this.updatePatternMetadata(),this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("set").addEventListener("change",g=>{const y=g.target.value==="custom";document.getElementById("customPC").disabled=!y,this.updatePatternMetadata(),this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("customPC").addEventListener("input",()=>{this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("baseMidi").addEventListener("input",g=>{this.settings.baseMidi=parseInt(g.target.value),this.render(),this.updateMIDIHoldIfActive(),I(this.settings)}),document.getElementById("fingeringMode").addEventListener("change",g=>{this.fingeringMode=g.target.checked,document.getElementById("fingeringModeInfo").style.display=this.fingeringMode?"block":"none",document.querySelectorAll(".finger-btn").forEach(y=>{y.disabled=!this.fingeringMode}),this.render()}),document.getElementById("fingeringHand").addEventListener("change",g=>{this.currentHand=g.target.value});for(let g=1;g<=5;g++)document.getElementById(`fingBtn${g}`).addEventListener("click",()=>{this.currentFinger=g,this.updateFingerButtonState()});document.addEventListener("keydown",g=>{this.fingeringMode&&g.key>="1"&&g.key<="5"&&(this.currentFinger=parseInt(g.key),this.updateFingerButtonState())}),document.getElementById("clearFingerings").addEventListener("click",()=>{this.currentPattern.clearAll(),this.render()}),document.getElementById("suggestFingerings").addEventListener("click",()=>{this.suggestFingerings()}),document.getElementById("savePattern").addEventListener("click",()=>this.saveCurrentPattern()),document.getElementById("loadPattern").addEventListener("change",g=>{g.target.value&&this.loadPatternByName(g.target.value)}),document.getElementById("deletePattern").addEventListener("click",()=>this.deleteCurrentPattern()),document.getElementById("exportPattern").addEventListener("click",()=>this.exportPattern()),document.getElementById("importPatternBtn").addEventListener("click",()=>{document.getElementById("importPattern").click()}),document.getElementById("importPattern").addEventListener("change",g=>this.importPattern(g)),document.getElementById("enableMidi").addEventListener("click",()=>this.initMIDI()),document.getElementById("midiDevice").addEventListener("change",g=>{g.target.value&&(m.selectOutputDevice(g.target.value),this.updateMIDIStatus())});const t=document.getElementById("midiHoldDuration"),e=document.getElementById("holdDurationValue");t==null||t.addEventListener("input",g=>{const y=parseInt(g.target.value);e.textContent=`${(y/1e3).toFixed(1)}s`,m.setHoldDuration(y),this.settings.midiHoldDuration=y,I(this.settings)});const n=document.getElementById("midiOctaveRange"),i=document.getElementById("octaveRangeValue");n==null||n.addEventListener("input",g=>{const y=parseInt(g.target.value);i.textContent=y===0?"0 (none)":`±${y}`,m.setOctaveRange(y),this.settings.midiOctaveRange=y,I(this.settings)});const s=document.getElementById("midiHoldToggle");s==null||s.addEventListener("change",g=>{g.target.checked?(m.enableHold(),this.sendHighlightedNotes()):m.disableHold()}),(a=document.getElementById("midiSendHighlighted"))==null||a.addEventListener("click",()=>{this.sendHighlightedNotes()}),(r=document.getElementById("analyzeErgo"))==null||r.addEventListener("click",()=>{this.analyzeErgonomics()}),(d=document.getElementById("handSize"))==null||d.addEventListener("change",g=>{const y=g.target.value;P.setHandSize(y),this.settings.handSize=y,I(this.settings)}),(c=document.getElementById("selectLeftHand"))==null||c.addEventListener("click",()=>{this.selectHandForCapture("left")}),(l=document.getElementById("selectRightHand"))==null||l.addEventListener("click",()=>{this.selectHandForCapture("right")}),(u=document.getElementById("startHandprintCapture"))==null||u.addEventListener("click",()=>{this.startHandprintCapture()}),(h=document.getElementById("exportHandprints"))==null||h.addEventListener("click",()=>{this.exportHandprints()}),(f=document.getElementById("clearHandprints"))==null||f.addEventListener("click",()=>{this.clearAllHandprints()}),(v=document.getElementById("clearChordNotes"))==null||v.addEventListener("click",()=>{document.querySelectorAll('input[name="chordNote"]').forEach(g=>{g.checked=!1})}),(E=document.getElementById("findChordFingerings"))==null||E.addEventListener("click",()=>{this.findChordFingeringSuggestions()}),(M=document.getElementById("generateSuggestion"))==null||M.addEventListener("click",()=>{this.generateChordSuggestion()}),(A=document.getElementById("saveSuggestion"))==null||A.addEventListener("click",()=>{this.saveSuggestionAsPattern()}),(k=document.getElementById("nextSuggestion"))==null||k.addEventListener("click",()=>{this.showNextSuggestion()}),(R=document.getElementById("comfortRating"))==null||R.addEventListener("input",g=>{this.currentSuggestionRating=parseInt(g.target.value),document.getElementById("comfortRatingValue").textContent=g.target.value}),(F=document.getElementById("key"))==null||F.addEventListener("change",()=>{var g;(g=document.getElementById("autoSuggestChords"))!=null&&g.checked&&this.generateChordSuggestion()}),(O=document.getElementById("set"))==null||O.addEventListener("change",()=>{var g;(g=document.getElementById("autoSuggestChords"))!=null&&g.checked&&this.generateChordSuggestion()}),(T=document.getElementById("fingeringType"))==null||T.addEventListener("change",g=>{this.settings.fingeringType=g.target.value,I(this.settings)}),this.gridRenderer.setPadClickHandler((g,y,U,kt)=>{this.handprintMode?this.handleHandprintClick(g,y):this.suggestionEditMode?this.handleSuggestionEditClick(g,y):this.fingeringMode?this.handleFingeringClick(g,y):m.playNote(U)})}loadStoredSettings(){const t=document.querySelector(`input[name="ori"][value="${this.settings.orientation}"]`);t&&(t.checked=!0);const e=document.querySelector(`input[name="lab"][value="${this.settings.labelMode}"]`);e&&(e.checked=!0);const n=document.getElementById("baseMidi");n&&(n.value=this.settings.baseMidi);const i=document.getElementById("midiHoldDuration");i&&(i.value=this.settings.midiHoldDuration,document.getElementById("holdDurationValue").textContent=`${(this.settings.midiHoldDuration/1e3).toFixed(1)}s`,m.setHoldDuration(this.settings.midiHoldDuration));const s=document.getElementById("midiOctaveRange");if(s){s.value=this.settings.midiOctaveRange;const r=this.settings.midiOctaveRange;document.getElementById("octaveRangeValue").textContent=r===0?"0 (none)":`±${r}`,m.setOctaveRange(r)}const a=document.getElementById("handSize");a&&(a.value=this.settings.handSize,P.setHandSize(this.settings.handSize)),this.updatePatternList()}render(){if(p("app","[APP] render() called"),this.gridRenderer.setOrientation(this.settings.orientation),this.gridRenderer.setLabelMode(this.settings.labelMode),this.gridRenderer.setBaseMidi(this.settings.baseMidi),this.handprintMode?this.gridRenderer.setHighlightedPCs(new Set):this.gridRenderer.setHighlightedPCs(this.getHighlightedPCs()),this.handprintMode)if(this.handprintCaptures.length>0){const t=new S("temp_handprint");this.handprintCaptures.forEach(e=>{t.setFingering(e.row,e.col,this.handprintCaptureHand,e.finger)}),this.gridRenderer.setFingeringPattern(t)}else this.gridRenderer.setFingeringPattern(new S("empty"));else this.gridRenderer.setFingeringPattern(this.currentPattern);this.gridRenderer.setFingeringMode(this.fingeringMode||this.handprintMode),this.gridRenderer.render(),p("app","[APP] render() completed")}getHighlightedPCs(){const t=document.getElementById("set").value;if(t==="custom"){const e=document.getElementById("customPC").value;return nt(e)}else{const e=document.getElementById("key").value;return et(e,t)}}handleFingeringClick(t,e){const n=this.currentPattern.getFingering(t,e);n&&n.hand===this.currentHand&&n.finger===this.currentFinger?this.currentPattern.removeFingering(t,e):this.currentPattern.setFingering(t,e,this.currentHand,this.currentFinger),this.render()}updateFingerButtonState(){for(let t=1;t<=5;t++){const e=document.getElementById(`fingBtn${t}`);e.style.opacity=t===this.currentFinger?"1":"0.5"}}suggestFingerings(){const t=this.getHighlightedPCs();if(t.size===0){alert("No notes highlighted. Please select a key and scale/chord first.");return}const e=[];for(let a=0;a<11;a++)for(let r=0;r<(a%2===0?6:5);r++){const d=C(a,r),l=(this.settings.baseMidi+d)%12;t.has(l)&&e.push({row:a,col:r})}if(e.length===0){alert("No pads match the selected notes in the current range.");return}const n=document.getElementById("fingeringHand").value,i=P.suggestFingerings(e,n,this.settings.baseMidi);this.currentPattern.getPadsForHand(n).forEach(a=>{this.currentPattern.removeFingering(a.row,a.col)}),i.forEach(a=>{this.currentPattern.setFingering(a.row,a.col,a.hand,a.finger)}),this.render(),alert(`Suggested fingerings for ${i.length} pads (${n} hand)`)}saveCurrentPattern(){const t=document.getElementById("patternName").value.trim();if(!t){alert("Please enter a pattern name");return}const e={...this.currentPattern.toJSON(),key:document.getElementById("key").value,set:document.getElementById("set").value,baseMidi:this.settings.baseMidi};dt(t,e),this.updatePatternList(),document.getElementById("patternName").value="",alert(`Pattern "${t}" saved!`)}loadPatternByName(t){const e=ct(t);if(!e){alert(`Pattern "${t}" not found`);return}this.currentPattern=S.fromJSON(e),document.getElementById("key").value=e.key,document.getElementById("set").value=e.set,this.settings.baseMidi=e.baseMidi,document.getElementById("baseMidi").value=e.baseMidi,this.render()}deleteCurrentPattern(){const t=document.getElementById("loadPattern").value;if(!t){alert("Please select a pattern to delete");return}confirm(`Delete pattern "${t}"?`)&&(lt(t),this.updatePatternList(),document.getElementById("loadPattern").value="")}exportPattern(){if(this.currentPattern.fingerings.size===0){alert("No fingerings to export. Create a fingering pattern first.");return}this.updatePatternMetadata();const t=document.getElementById("patternName");t.value.trim()&&(this.currentPattern.name=t.value.trim());let e;if(this.currentPattern.name==="Untitled"||!this.currentPattern.name.trim()){const r=this.currentPattern.metadata.key||"C",d=this.currentPattern.metadata.setType||"major",c=this.currentHand||"right",l=new Date().toISOString().slice(11,19).replace(/:/g,"");e=`${r}_${d}_${c}_${l}`}else e=this.currentPattern.name;const n=JSON.stringify(this.currentPattern.toJSON(),null,2),i=new Blob([n],{type:"application/json"}),s=URL.createObjectURL(i),a=document.createElement("a");a.href=s,a.download=`${e.replace(/[^a-z0-9]/gi,"_").toLowerCase()}.json`,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(s),alert(`Exported "${this.currentPattern.name}" to JSON file`)}importPattern(t){const e=t.target.files[0];if(!e)return;const n=new FileReader;n.onload=i=>{try{const s=JSON.parse(i.target.result),a=S.fromJSON(s);this.currentPattern=a,document.getElementById("patternName").value=a.name,this.render(),alert(`Imported "${a.name}" with ${a.fingerings.size} fingerings`),t.target.value=""}catch(s){alert(`Error importing file: ${s.message}`),console.error("Import error:",s)}},n.readAsText(e)}updatePatternList(){const t=document.getElementById("loadPattern"),e=gt();t.innerHTML='<option value="">-- Select Pattern --</option>',e.forEach(n=>{const i=document.createElement("option");i.value=n,i.textContent=n,t.appendChild(i)})}async initMIDI(){try{await m.init(),this.updateMIDIDeviceList(),this.updateMIDIStatus()}catch(t){this.updateMIDIStatus(t.message)}}updateMIDIDeviceList(){const t=document.getElementById("midiDevice"),e=m.getOutputDevices();t.innerHTML='<option value="">-- Select device --</option>',e.forEach(n=>{const i=document.createElement("option");i.value=n.id,i.textContent=n.name,t.appendChild(i)}),t.disabled=e.length===0}updateMIDIStatus(t=null){const e=m.getStatus(),n=document.getElementById("midiStatus");t?(n.textContent=`Error: ${t}`,n.className="error-box"):e.isSupported?e.isInitialized?e.hasDevice?(n.textContent=`Connected: ${e.deviceName}`,n.className="success-box"):(n.textContent="MIDI ready - select a device",n.className="info-box"):(n.textContent="MIDI not initialized",n.className="warning-box"):(n.textContent="WebMIDI not supported (use Chrome/Brave/Edge)",n.className="warning-box")}sendHighlightedNotes(){const t=this.getHighlightedPCs(),e=[];for(let n=0;n<39;n++){const i=this.settings.baseMidi+n,s=i%12;t.has(s)&&e.push(i)}m.playChord(e,100,null,20)}updatePatternMetadata(){const t=document.getElementById("key").value,e=document.getElementById("set").value;this.currentPattern.metadata.key=t,this.currentPattern.metadata.setType=e,this.currentPattern.metadata.modifiedAt=Date.now()}updateMIDIHoldIfActive(){const t=document.getElementById("midiHoldToggle");t&&t.checked&&m.getStatus().isHolding&&(m.releaseAllNotes(),this.sendHighlightedNotes())}analyzeErgonomics(){const t=P.analyzePattern(this.currentPattern),e=document.getElementById("ergoResult");e&&(e.innerHTML=`
        <div class="score-display">
          <div class="score-label">Ergonomic Score</div>
          <div class="score-value">${t.score}</div>
          <div class="score-recommendation">${t.recommendation}</div>
        </div>
        ${t.issues.length>0?`
          <h4>Issues Found:</h4>
          <ul class="issue-list">
            ${t.issues.map(n=>`<li class="issue-item">${this.formatIssue(n)}</li>`).join("")}
          </ul>
        `:'<div class="success-box">No ergonomic issues found!</div>'}
      `)}formatIssue(t){switch(t.type){case"excessive_stretch":return`Excessive stretch between fingers ${t.fingers.join(" and ")} (${t.hand} hand)`;case"uncomfortable_stretch":return`Uncomfortable stretch between fingers ${t.fingers.join(" and ")} (${t.hand} hand)`;case"finger_crossing":return`Possible finger crossing: fingers ${t.fingers.join(" and ")} (${t.hand} hand)`;default:return JSON.stringify(t)}}selectHandForCapture(t){this.handprintCaptureHand=t;const e=document.getElementById("selectLeftHand"),n=document.getElementById("selectRightHand");t==="left"?(e==null||e.classList.add("active"),n==null||n.classList.remove("active")):(n==null||n.classList.add("active"),e==null||e.classList.remove("active"))}async startHandprintCapture(){if(this.handprintMode){this.stopHandprintSession();return}const t=document.getElementById("startHandprintCapture");if(t.textContent="Stop Capture",t.style.background="#c44",!m.getStatus().isInitialized)try{await m.init(),this.updateMIDIDeviceList(),this.updateMIDIStatus();const n=m.getOutputDevices();if(n.length>0){const s=n.find(a=>a.name.toLowerCase().includes("exquis"))||n[0];m.selectOutputDevice(s.id),document.getElementById("midiDevice").value=s.id,this.updateMIDIStatus()}}catch(n){alert(`Cannot enable MIDI: ${n.message}

Fallback: You can click pads on the grid instead.`)}this.handprintMode=!0,this.handprintCaptureState="waiting_basenote",this.handprintCaptures=[],this.handprintSessionBaseMidi=this.settings.baseMidi,this.handprintSessionPadOffset=null,this.handprintSessionID=`session_${Date.now()}`,this.handprintSessionCount=0,this.lastHandprintNoteTime=0,this.preCaptureLabelMode=this.settings.labelMode,this.settings.labelMode="index",H("chromatic"),m.enterExquisDeveloperMode(),this.render();const e=document.getElementById("handprintCaptureStatus");e&&(e.innerHTML=`
        <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Calibration - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
          <strong style="color:#6f6;">Press bottom-left pad (0,0) to calibrate</strong><br/>
          <span style="font-size:0.85em; opacity:0.7;">This sets the reference point for your handprint</span>
          <div style="margin-top:8px; font-size:1.2em; color:#6af;">
            <strong id="handprintCounter">Waiting for calibration...</strong>
          </div>
        </div>
      `),m.setNoteHandler((n,i)=>{if(this.handprintMode&&i>0){const s=Date.now();s-this.lastHandprintNoteTime>100&&(this.lastHandprintNoteTime=s,this.handleHandprintPadID(n))}},!0)}stopHandprintSession(){const t=this.handprintSessionCount>0;m.exitExquisDeveloperMode(),this.handprintMode=!1,this.handprintCaptureState=null,this.handprintCaptures=[],this.handprintSessionBaseMidi=null,this.handprintSessionID=null,this.handprintSessionCount=0,m.setNoteHandler(null),this.preCaptureLabelMode&&(this.settings.labelMode=this.preCaptureLabelMode,this.preCaptureLabelMode=null),H("intervals");const e=document.getElementById("handprintCaptureStatus");e&&(e.innerHTML=`
        <div style="padding:8px; opacity:0.7;">
          ${t?`Session complete. Captured ${t} handprint${t>1?"s":""}.`:"Session cancelled."}
        </div>
      `,setTimeout(()=>{e.innerHTML=""},2e3));const n=document.getElementById("startHandprintCapture");n.textContent="Start Capture",n.style.background="",this.render()}handleHandprintPadID(t){if(this.handprintCaptureState==="waiting_basenote"){this.handprintSessionPadOffset=t,this.handprintCaptureState="capturing_fingers",p("handprint",`[HANDPRINT] Developer Mode calibrated: pad 0,0 has ID ${t}`);const n=document.getElementById("handprintCaptureStatus");n&&(n.innerHTML=`
          <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
            <strong>Capture Active - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
            <strong style="color:#6f6;">Press 5 fingers in order 👍 1 → 2 → 3 → 4 → 5 🤙</strong>
            <div style="margin-top:8px; font-size:1.2em; color:#6af;">
              <strong id="handprintCounter">Captured: 0/5</strong>
            </div>
          </div>
        `),this.render();return}if(this.handprintCaptureState!=="capturing_fingers"||this.handprintCaptures.length>=5)return;const e=t-this.handprintSessionPadOffset;if(this.handprintCaptures.some(n=>n.padIndex===e)){console.log("Ignoring duplicate pad:",e);return}try{const{row:n,col:i}=Y(e),s=this.handprintSessionBaseMidi+e;this.handprintCaptures.push({row:n,col:i,padIndex:e,midiNote:s,finger:this.handprintCaptures.length+1,timestamp:Date.now()});const a=document.getElementById("handprintCounter");a&&(a.textContent=`Captured: ${this.handprintCaptures.length}/5`),this.render(),this.handprintCaptures.length===5&&this.finishHandprintCapture()}catch(n){console.error("Invalid pad index:",e,"from pad ID:",t,n)}}handleHandprintClick(t,e){if(this.handprintCaptureState!=="capturing_fingers"||this.handprintCaptures.length>=5)return;const n=C(t,e);if(this.handprintCaptures.some(a=>a.padIndex===n)){console.log("Ignoring duplicate pad click:",n);return}const i=this.handprintSessionBaseMidi+n;this.handprintCaptures.push({row:t,col:e,padIndex:n,midiNote:i,finger:this.handprintCaptures.length+1,timestamp:Date.now()});const s=document.getElementById("handprintCounter");s&&(s.textContent=`Captured: ${this.handprintCaptures.length}/5 (click)`),this.render(),this.handprintCaptures.length===5&&this.finishHandprintCapture()}finishHandprintCapture(){var e,n;this.handprintCaptureState="rating";const t=document.getElementById("handprintCaptureStatus");if(t){t.innerHTML=`
        <div style="background:#243; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Handprint Captured!</strong><br/>
          How comfortable was this position?
          <div style="margin-top:12px;">
            <input type="range" id="comfortRating" min="0" max="100" value="100"
                   style="width:100%;" />
            <div style="display:flex; justify-content:space-between; font-size:0.85em; opacity:0.7;">
              <span>Uncomfortable</span>
              <span id="comfortValue">100</span>
              <span>Very Comfortable</span>
            </div>
          </div>
          <button id="saveHandprintWithRating" style="width:100%; margin-top:12px; background:#4a6;">
            Save Handprint
          </button>
          <button id="discardHandprint" style="width:100%; margin-top:4px; background:#666;">
            Discard
          </button>
        </div>
      `;const i=document.getElementById("comfortRating"),s=document.getElementById("comfortValue");i==null||i.addEventListener("input",a=>{s.textContent=a.target.value}),(e=document.getElementById("saveHandprintWithRating"))==null||e.addEventListener("click",()=>{const a=parseInt((i==null?void 0:i.value)||"100");this.saveHandprint(a)}),(n=document.getElementById("discardHandprint"))==null||n.addEventListener("click",()=>{this.discardHandprint()})}this.render()}saveHandprint(t){const e={};for(let c=0;c<5;c++)for(let l=c+1;l<5;l++){const u=this.handprintCaptures[c],h=this.handprintCaptures[l],f=Math.sqrt(Math.pow(h.row-u.row,2)+Math.pow(h.col-u.col,2)),v=`${c+1}-${l+1}`;e[v]=f}const i=m.getStatus().deviceName||"Unknown",a={id:`${this.handprintCaptureHand}_${Date.now()}`,sessionID:this.handprintSessionID,hand:this.handprintCaptureHand,orientation:this.settings.orientation,baseMidi:this.handprintSessionBaseMidi,midiDevice:i,comfortRating:t,positions:this.handprintCaptures,measurements:e,capturedAt:Date.now()};this.savedHandprints.push(a),this.settings.handprints=this.savedHandprints,I(this.settings),this.handprintSessionCount++,this.updateHandprintList();const r=document.getElementById("handprintCaptureStatus");r&&(r.innerHTML=`
        <div style="background:#243; padding:12px; border-radius:4px; margin-top:8px; color:#6f6;">
          ✓ Handprint ${this.handprintSessionCount} Saved!<br/>
          <strong>Comfort:</strong> ${t}/100<br/>
          <strong>Session total:</strong> ${this.handprintSessionCount} handprint(s)
          <div style="margin-top:8px; border-top:1px solid #444; padding-top:8px;">
            Press another pad to capture next handprint,<br/>
            or click "Stop Capture" to finish.
          </div>
        </div>
      `),this.handprintCaptures=[],this.handprintCaptureState="capturing_fingers";const d=document.getElementById("handprintCounter");d&&(d.textContent="Captured: 0/5"),this.render()}discardHandprint(){this.handprintCaptures=[],this.handprintCaptureState="capturing_fingers";const t=document.getElementById("handprintCaptureStatus");t&&(t.innerHTML=`
        <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Capture Active - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
          <strong style="color:#6f6;">Press 5 fingers in order 👍 1 → 2 → 3 → 4 → 5 🤙</strong>
          <div style="margin-top:8px; font-size:1.2em; color:#6af;">
            <strong id="handprintCounter">Captured: 0/5</strong>
          </div>
          <div style="margin-top:8px; padding-top:8px; border-top:1px solid #444; font-size:0.9em; opacity:0.7;">
            Previous handprint discarded. Ready for next capture.
          </div>
        </div>
      `),this.render()}updateHandprintList(){const t=document.getElementById("handprintList"),e=document.getElementById("exportHandprints"),n=document.getElementById("clearHandprints");if(this.savedHandprints.length===0){t.innerHTML='<div style="opacity:0.7;">No handprints captured yet.</div>',e.style.display="none",n.style.display="none";return}t.innerHTML=this.savedHandprints.map(i=>{const a=new Date(i.capturedAt).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),r=i.comfortRating||"?";return`
        <div class="handprint-item ${i.hand}">
          <strong>${i.hand.toUpperCase()}</strong> | Comfort: ${r}/100<br/>
          <span style="font-size:0.85em; opacity:0.7;">MIDI ${i.baseMidi} | ${i.orientation} | ${a}</span>
        </div>
      `}).join(""),e.style.display="block",n.style.display="block"}clearAllHandprints(){confirm(`Clear all ${this.savedHandprints.length} handprint(s)?

This cannot be undone!`)&&(this.savedHandprints=[],this.settings.handprints=[],I(this.settings),this.updateHandprintList(),alert("All handprints cleared."))}exportHandprints(){if(this.savedHandprints.length===0){alert("No handprints to export.");return}const t={exportedAt:new Date().toISOString(),handprints:this.savedHandprints},e=JSON.stringify(t,null,2),n=new Blob([e],{type:"application/json"}),i=URL.createObjectURL(n),s=document.createElement("a");s.href=i,s.download=`handprints_${new Date().toISOString().slice(0,19).replace(/:/g,"")}.json`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(i),alert(`Exported ${this.savedHandprints.length} handprint(s) to JSON file.`)}findChordFingeringSuggestions(){const t=[];if(document.querySelectorAll('input[name="chordNote"]:checked').forEach(i=>{t.push(parseInt(i.value))}),t.length<3){const i=document.getElementById("chordSuggestionsStatus");i.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          Please select at least 3 notes for a chord.
        </div>
      `;return}if(t.length>5){const i=document.getElementById("chordSuggestionsStatus");i.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          Please select no more than 5 notes for block chords.
        </div>
      `;return}if(this.savedHandprints.length===0){const i=document.getElementById("chordSuggestionsStatus");i.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          No handprints available. Please capture some handprints first.
        </div>
      `;return}const e=ft(t,this.savedHandprints,this.settings.baseMidi);if(e.length===0){const i=document.getElementById("chordSuggestionsStatus");i.innerHTML=`
        <div class="info-box" style="margin-top:8px;">
          No matching fingerings found in your handprints.
          Try capturing more handprint positions.
        </div>
      `,document.getElementById("chordSuggestions").style.display="none";return}const n=Ct(e);this.displayChordSuggestions(n,t)}displayChordSuggestions(t,e){const n=document.getElementById("chordSuggestionsStatus"),i=document.getElementById("chordSuggestions"),s=document.getElementById("suggestionsList");n.innerHTML=`
      <div class="success-box" style="margin-top:8px;">
        Found ${t.length} matching fingering${t.length>1?"s":""}!
      </div>
    `;const a=t.slice(0,5);s.innerHTML=a.map((r,d)=>{const c=r.positions.sort((u,h)=>u.finger-h.finger).map(u=>`F${u.finger}`).join("-"),l=[...new Set(r.positions.map(u=>u.pitchClass))].sort((u,h)=>u-h).map(u=>["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][u]).join("-");return`
        <div class="suggestion-item" style="
          background: ${d===0?"#eef":"#f5f5f5"};
          border: 2px solid ${d===0?"#6aa5ff":"#ddd"};
          border-radius: 6px;
          padding: 12px;
          margin-bottom: 8px;
          cursor: pointer;
        " data-suggestion-index="${d}">
          <div style="display:flex; justify-content:space-between; align-items:center; margin-bottom:8px;">
            <strong style="color:#446; font-size:1.1em;">#${d+1} ${l}</strong>
            <span style="background:#446; color:#fff; padding:4px 8px; border-radius:12px; font-size:0.9em; font-weight:bold;">
              ${r.score}
            </span>
          </div>
          <div style="font-size:0.85em; opacity:0.8; margin-bottom:4px;">
            Fingers: ${c} (${r.hand} hand)
          </div>
          <div style="display:flex; gap:8px; font-size:0.75em; opacity:0.7;">
            <span title="Comfort">💆 ${r.comfortScore}</span>
            <span title="Geometry">📐 ${r.geometricScore}</span>
            <span title="Ergonomics">✋ ${r.ergonomicScore}</span>
          </div>
          ${d===0?'<div style="margin-top:8px; font-size:0.85em; color:#446;">⭐ Best match - Click to view on grid</div>':""}
        </div>
      `}).join(""),s.querySelectorAll(".suggestion-item").forEach((r,d)=>{r.addEventListener("click",()=>{this.showSuggestionOnGrid(a[d])})}),i.style.display="block"}showSuggestionOnGrid(t){const e=new S("chord_suggestion");t.positions.forEach(s=>{e.setFingering(s.row,s.col,t.hand,s.finger)}),this.currentPattern=e,this.render();const n=new Set(t.positions.map(s=>s.pitchClass));this.gridRenderer.setHighlightedPCs(n),this.gridRenderer.render();const i=document.getElementById("chordSuggestionsStatus");i.innerHTML=`
      <div class="success-box" style="margin-top:8px;">
        ✓ Showing suggestion on grid. Click "Find Fingerings" to see other options.
      </div>
    `}generateChordSuggestion(){const t=this.getHighlightedPCs();if(t.size===0){alert("No chord selected. Please select a key and chord type first.");return}const e=Array.from(t);if(this.savedHandprints.length===0){alert("No handprints available. Please capture some handprints first.");return}const n=document.getElementById("suggestionHand").value,i=Lt(e,this.savedHandprints,this.settings.baseMidi,n,10);if(i.length===0){alert("Could not generate suggestions for this chord. Try a different range or capture more handprints.");return}this.currentSuggestions=i,this.currentSuggestionIndex=0,this.displayCurrentSuggestion()}displayCurrentSuggestion(){if(this.currentSuggestions.length===0)return;const t=this.currentSuggestions[this.currentSuggestionIndex],e=new S("synthesized_suggestion");t.positions.forEach(r=>{e.setFingering(r.row,r.col,t.hand,r.finger)}),this.currentPattern=e,this.render();const n=new Set(t.targetPitchClasses);this.gridRenderer.setHighlightedPCs(n),this.gridRenderer.render();const i=document.getElementById("suggestionDisplay"),s=t.targetPitchClasses.sort((r,d)=>r-d).map(r=>["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][r]).join("-"),a=t.positions.sort((r,d)=>r.finger-d.finger).map(r=>(`${r.row}${r.col}`,`
          <div style="display:flex; align-items:center; gap:8px; margin:4px 0;">
            <span style="font-weight:bold;">Finger ${r.finger}:</span>
            <span>r${r.row}c${r.col}</span>
            <button class="change-finger-btn" data-row="${r.row}" data-col="${r.col}" data-current-finger="${r.finger}"
              style="padding:2px 8px; background:#446; color:#fff; border:none; border-radius:3px; cursor:pointer; font-size:0.8em;">
              Change
            </button>
          </div>
        `)).join("");i.innerHTML=`
      <div style="margin-bottom:8px;">
        <strong style="color:#446;">${s}</strong> (${t.hand} hand)
      </div>
      <div style="font-size:0.85em;">
        ${a}
      </div>
      <div style="margin-top:8px; font-size:0.85em; opacity:0.7;">
        Suggestion ${this.currentSuggestionIndex+1} of ${this.currentSuggestions.length}
        • Score: ${Math.round(t.score)}
      </div>
    `,i.querySelectorAll(".change-finger-btn").forEach(r=>{r.addEventListener("click",d=>{d.stopPropagation();const c=parseInt(r.dataset.row),l=parseInt(r.dataset.col),u=parseInt(r.dataset.currentFinger);this.showFingerSelector(c,l,u)})}),document.getElementById("currentSuggestion").style.display="block"}showNextSuggestion(){this.currentSuggestions.length!==0&&(this.currentSuggestionIndex=(this.currentSuggestionIndex+1)%this.currentSuggestions.length,this.displayCurrentSuggestion())}saveSuggestionAsPattern(){if(this.currentSuggestions.length===0)return;const t=this.currentSuggestions[this.currentSuggestionIndex],e=document.getElementById("key").value,n=document.getElementById("set").value,i=document.querySelector(`#set option[value="${n}"]`).textContent,s=`${e} ${i}`,a=new S(s);t.positions.forEach(c=>{a.setFingering(c.row,c.col,t.hand,c.finger)}),a.metadata={key:e,setType:n,baseMidi:this.settings.baseMidi,createdAt:Date.now(),modifiedAt:Date.now(),comfortRating:this.currentSuggestionRating,synthesized:!0,hand:t.hand};const r={...a.toJSON(),...a.metadata},d=JSON.parse(localStorage.getItem("fingeringPatterns")||"{}");d[s]=r,localStorage.setItem("fingeringPatterns",JSON.stringify(d)),this.updatePatternList(),alert(`Saved as "${s}" with comfort rating ${this.currentSuggestionRating}/5`)}showFingerSelector(t,e,n){const i=this.currentSuggestions[this.currentSuggestionIndex],s=new Set(i.positions.map(d=>d.finger));s.delete(n);const a=[];for(let d=1;d<=5;d++){const c=s.has(d),l=d===n,u=l?`${d} (current)`:c?`${d} (used)`:`${d}`,h=c?"disabled":"",f=l?"background:#6aa5ff;":c?"opacity:0.3;":"";a.push(`
        <button onclick="window.app.changeSuggestionFinger(${t}, ${e}, ${d})"
          ${h}
          style="padding:12px 20px; margin:4px; font-size:1.2em; cursor:pointer; border:2px solid #446; border-radius:4px; ${f}">
          ${u}
        </button>
      `)}const r=document.createElement("div");r.id="fingerSelectorModal",r.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
    `,r.innerHTML=`
      <div style="background:#fff; padding:24px; border-radius:8px; box-shadow:0 4px 12px rgba(0,0,0,0.3); max-width:400px;">
        <h3 style="margin:0 0 16px 0; color:#446;">Select Finger for r${t}c${e}</h3>
        <div style="display:flex; flex-wrap:wrap; justify-content:center;">
          ${a.join("")}
        </div>
        <button onclick="document.getElementById('fingerSelectorModal').remove()"
          style="width:100%; margin-top:16px; padding:8px; background:#666; color:#fff; border:none; border-radius:4px; cursor:pointer;">
          Cancel
        </button>
      </div>
    `,document.body.appendChild(r),r.addEventListener("click",d=>{d.target===r&&r.remove()})}changeSuggestionFinger(t,e,n){var r;if(this.currentSuggestions.length===0)return;const i=this.currentSuggestions[this.currentSuggestionIndex],s=i.positions.findIndex(d=>d.row===t&&d.col===e);if(s===-1)return;if(i.positions.some((d,c)=>c!==s&&d.finger===n)){alert(`Finger ${n} is already assigned to another pad. Please choose a different finger.`);return}i.positions[s].finger=n,(r=document.getElementById("fingerSelectorModal"))==null||r.remove(),this.displayCurrentSuggestion()}handleSuggestionEditClick(t,e){if(this.currentSuggestions.length===0)return;const i=this.currentSuggestions[this.currentSuggestionIndex].positions.find(s=>s.row===t&&s.col===e);i&&this.showFingerSelector(t,e,i.finger)}}document.addEventListener("DOMContentLoaded",()=>{window.app=new At});
