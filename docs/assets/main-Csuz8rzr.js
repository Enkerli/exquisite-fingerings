(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();const ue={C:0,"C#":1,Db:1,D:2,"D#":3,Eb:3,E:4,F:5,"F#":6,Gb:6,G:7,"G#":8,Ab:8,A:9,"A#":10,Bb:10,B:11},he={maj:{name:"Major scale",intervals:[0,2,4,5,7,9,11],type:"scale"},natmin:{name:"Natural minor",intervals:[0,2,3,5,7,8,10],type:"scale"},harmin:{name:"Harmonic minor",intervals:[0,2,3,5,7,8,11],type:"scale"},melmin:{name:"Melodic minor",intervals:[0,2,3,5,7,9,11],type:"scale"},dorian:{name:"Dorian",intervals:[0,2,3,5,7,9,10],type:"scale"},phrygian:{name:"Phrygian",intervals:[0,1,3,5,7,8,10],type:"scale"},lydian:{name:"Lydian",intervals:[0,2,4,6,7,9,11],type:"scale"},mixolydian:{name:"Mixolydian",intervals:[0,2,4,5,7,9,10],type:"scale"},locrian:{name:"Locrian",intervals:[0,1,3,5,6,8,10],type:"scale"},majpent:{name:"Major pentatonic",intervals:[0,2,4,7,9],type:"scale"},minpent:{name:"Minor pentatonic",intervals:[0,3,5,7,10],type:"scale"},majtriad:{name:"Major triad",intervals:[0,4,7],type:"chord"},mintriad:{name:"Minor triad",intervals:[0,3,7],type:"chord"},augtriad:{name:"Augmented triad",intervals:[0,4,8],type:"chord"},dimtriad:{name:"Diminished triad",intervals:[0,3,6],type:"chord"},maj7:{name:"Major 7th",intervals:[0,4,7,11],type:"chord"},min7:{name:"Minor 7th",intervals:[0,3,7,10],type:"chord"},dom7:{name:"Dominant 7th",intervals:[0,4,7,10],type:"chord"},dim7:{name:"Diminished 7th",intervals:[0,3,6,9],type:"chord"},hdim7:{name:"Half-diminished 7th",intervals:[0,3,6,10],type:"chord"},maj9:{name:"Major 9th",intervals:[0,4,7,11,14],type:"chord"},min9:{name:"Minor 9th",intervals:[0,3,7,10,14],type:"chord"},dom9:{name:"Dominant 9th",intervals:[0,4,7,10,14],type:"chord"},chromatic:{name:"Chromatic",intervals:[0,1,2,3,4,5,6,7,8,9,10,11],type:"scale"},wholeTone:{name:"Whole tone",intervals:[0,2,4,6,8,10],type:"scale"}};function ge(a,e){const t=ue[a];if(t===void 0)throw new Error(`Invalid key: ${a}`);const n=he[e];if(!n)throw new Error(`Invalid set type: ${e}`);const s=new Set;for(const i of n.intervals)s.add((t+i)%12);return s}function pe(a){const e=new Set;return!a||!a.trim()||a.split(",").forEach(t=>{const n=Number(t.trim());Number.isNaN(n)||e.add((n%12+12)%12)}),e}function P(a){return(a%12+12)%12}const me={enabled:!1,app:!0,midi:!0,grid:!0,handprint:!0,shouldLog(a){return this.enabled&&this[a]}};function f(a,...e){me.shouldLog(a)&&console.log(...e)}function ie(...a){console.error(...a)}function fe(...a){console.warn(...a)}class ve{constructor(e,t=null){this.svg=e,this.device=t,this.orientation="portrait",this.labelMode="pc",this.baseMidi=48,this.highlightedPCs=new Set,this.fingeringPattern=null,this.fingeringMode=!1,this.onPadClick=null}setDevice(e){this.device=e}setOrientation(e){this.orientation=e}setLabelMode(e){this.labelMode=e}setBaseMidi(e){this.baseMidi=e}setHighlightedPCs(e){this.highlightedPCs=e}setFingeringPattern(e){this.fingeringPattern=e}setFingeringMode(e){this.fingeringMode=e}setPadClickHandler(e){this.onPadClick=e}render(){if(!this.device){console.error("[GridRenderer] No device set - cannot render");return}f("grid","[GridRenderer] render() called",{svg:this.svg,device:this.device.name,gridType:this.device.gridType,orientation:this.orientation,labelMode:this.labelMode});const e=this.device.getViewBox(this.orientation);this.svg.setAttribute("viewBox",e.viewBox),this.svg.innerHTML="";const t=document.createElementNS("http://www.w3.org/2000/svg","g");this.orientation==="landscape"&&t.setAttribute("transform",`translate(${e.width},0) rotate(90)`);let n=0;for(let s=0;s<this.device.rowCount;s++){const i=this.device.getRowLength(s);for(let o=0;o<i;o++)this._renderPad(t,s,o),n++}f("grid",`[GridRenderer] Rendered ${n} pads for ${this.device.name}`),this.svg.appendChild(t),f("grid","[GridRenderer] Grid appended to SVG")}_renderPad(e,t,n){const{x:s,y:i}=this.device.getCellCenter(t,n),o=this.device.getMidiNote(t,n,this.baseMidi),r=P(o),d=this.device.gridType==="hex"?22:14,c=document.createElementNS("http://www.w3.org/2000/svg","polygon");if(c.setAttribute("points",this.device.getPadPoints(s,i,d)),c.setAttribute("class","pad"),c.setAttribute("stroke","#666"),c.setAttribute("fill","#6aa5ff"),c.setAttribute("fill-opacity","0.12"),this.highlightedPCs.has(r)&&c.classList.add("on"),this.fingeringMode&&c.classList.add("fingering-mode"),c.addEventListener("click",()=>{this.onPadClick&&this.onPadClick(t,n,o,r)}),e.appendChild(c),this._renderLabel(e,s,i,o,r),this.fingeringPattern){const l=this.fingeringPattern.getFingering(t,n);l&&this._renderFingering(e,s,i,l)}}_renderLabel(e,t,n,s,i){const o=this._getLabelText(s,i),r=document.createElementNS("http://www.w3.org/2000/svg","text");r.setAttribute("x",t),r.setAttribute("y",n+4),r.setAttribute("text-anchor","middle"),r.setAttribute("class","label"),this.orientation==="landscape"&&r.setAttribute("transform",`rotate(-90 ${t} ${n})`),r.textContent=o,e.appendChild(r)}_renderFingering(e,t,n,s){const i=document.createElementNS("http://www.w3.org/2000/svg","text");i.setAttribute("x",t),i.setAttribute("y",n-8),i.setAttribute("text-anchor","middle"),i.setAttribute("class",`fing ${s.hand}`),this.orientation==="landscape"&&i.setAttribute("transform",`rotate(-90 ${t} ${n})`),i.textContent=s.finger,e.appendChild(i)}_getLabelText(e,t){switch(this.labelMode){case"pc":return t;case"note":return this._midiToNoteName(e);case"midi":return e;default:return t}}_midiToNoteName(e){const t=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],n=P(e);return t[n]}}const M=11;function B(a){return a%2===0?6:5}const L=(()=>{const a=[0];for(let e=1;e<M;e++){const t=a[e-1];a.push(t+(e%2===1?4:3))}return a})(),H=(()=>{const a=[0];for(let e=1;e<M;e++){const t=B(e-1);a.push(a[e-1]+t)}return a})(),R={portrait:{size:22,w:38,h:33}};function q(a,e,t=48){const n=R.portrait,s=e*n.w+(a%2?n.w/2:0)+t,i=(M-1-a)*n.h+t;return{x:s,y:i}}function ye(a,e,t){return[[0,-t],[.866*t,-.5*t],[.866*t,.5*t],[0,+t],[-.866*t,.5*t],[-.866*t,-.5*t]].map(([s,i])=>`${a+s},${e+i}`).join(" ")}function Ce(a="portrait"){const e=R.portrait,t=6*e.w+120,n=M*e.h+120;return a==="portrait"?{width:t,height:n,viewBox:`0 0 ${t} ${n}`}:{width:n,height:t,viewBox:`0 0 ${n} ${t}`}}const Se={minorThirdUp:{row:1,col:0},majorThirdUp:{row:1,col:1},perfectFifth:{row:2,col:0},perfectFourth:{row:2,col:1},octave:{row:4,col:0}};function Ee(a,e){const t=[],s=a%2===0?[{dr:0,dc:-1},{dr:0,dc:1},{dr:1,dc:-1},{dr:1,dc:0},{dr:-1,dc:-1},{dr:-1,dc:0}]:[{dr:0,dc:-1},{dr:0,dc:1},{dr:1,dc:0},{dr:1,dc:1},{dr:-1,dc:0},{dr:-1,dc:1}];for(const{dr:i,dc:o}of s){const r=a+i,d=e+o;r>=0&&r<M&&d>=0&&d<B(r)&&t.push({row:r,col:d})}return t}function oe(a,e,t,n){const{x:s,y:i}=q(a,e),{x:o,y:r}=q(t,n);return Math.sqrt((o-s)**2+(r-i)**2)/R.portrait.w}const O=[240,0,33,126,127],_=[247],k={DEV_MODE:0,SET_LED_RGB:4},be={PADS:1},w={NONE:0,PULSE_BLACK:63},b={ROOT:{r:127,g:0,b:127},THIRD:{r:0,g:127,b:127},FIFTH:{r:127,g:127,b:0},SEVENTH:{r:127,g:64,b:0},NINTH:{r:0,g:127,b:64},ELEVENTH:{r:64,g:0,b:127},THIRTEENTH:{r:127,g:0,b:64},DEFAULT:{r:64,g:64,b:64}};class xe{constructor(e){this.output=e,this.isActive=!1,this.activeZones=0,this.padStates=new Array(61).fill(!1),this.eventHandlers={padPress:null,padRelease:null,encoder:null,button:null}}async enter(e=be.PADS){if(!this.output)throw new Error("No MIDI output available");const t=[...O,k.DEV_MODE,e,..._];this.output.send(t),this.isActive=!0,this.activeZones=e,console.log("[DevMode] Entered dev mode, zones:",e.toString(16))}async exit(){if(!this.output)return;const e=[...O,k.DEV_MODE,0,..._];this.output.send(e),this.isActive=!1,this.activeZones=0,this.padStates.fill(!1),console.log("[DevMode] Exited dev mode")}setPadColor(e,t,n,s,i=w.NONE){if(!this.output)return;const o=[...O,k.SET_LED_RGB,e,t&127,n&127,s&127,i&127,..._];this.output.send(o)}setPadColors(e){if(!this.output||e.length===0)return;const t=[...e].sort((n,s)=>n.id-s.id);for(const n of t)this.setPadColor(n.id,n.r,n.g,n.b,n.fx||w.NONE)}clearAllPads(){const e=[];for(let t=0;t<=60;t++)e.push({id:t,r:0,g:0,b:0,fx:w.NONE});this.setPadColors(e)}highlightChord(e,t,n=0,s=0){const i=[],o=this.calculateIntervals(e,t);for(let r=0;r<=60;r++){let d=0,c=0,l=!1;for(let v=0;v<M;v++)if(r>=H[v]){const C=r-H[v];if(C>=0&&C<B(v)){d=v,c=C,l=!0;break}}if(!l)continue;const h=L[d]+c,m=(n+h+s)%12;if(e.includes(m)){const v=o.get(m),C=this.getColorForInterval(v,m===t);i.push({id:r,r:C.r,g:C.g,b:C.b,fx:m===t?w.PULSE_BLACK:w.NONE})}else i.push({id:r,r:0,g:0,b:0,fx:w.NONE})}this.setPadColors(i)}calculateIntervals(e,t){const n=new Map;for(const s of e){const i=(s-t+12)%12;let o;switch(i){case 0:o="root";break;case 2:o="ninth";break;case 3:case 4:o="third";break;case 5:o="eleventh";break;case 7:o="fifth";break;case 9:o="thirteenth";break;case 10:case 11:o="seventh";break;default:o="default"}n.set(s,o)}return n}getColorForInterval(e,t){if(t)return b.ROOT;switch(e){case"third":return b.THIRD;case"fifth":return b.FIFTH;case"seventh":return b.SEVENTH;case"ninth":return b.NINTH;case"eleventh":return b.ELEVENTH;case"thirteenth":return b.THIRTEENTH;default:return b.DEFAULT}}handleMidiMessage(e){if(e.length<3)return;const[t,n,s]=e,i=t&15,o=t&240;if(console.log("[DevMode] handleMidiMessage:",{status:t.toString(16),channel:i,command:o.toString(16),note:n,velocity:s}),i!==15){console.log("[DevMode] Ignoring - not channel 16");return}o===144&&s>0&&(console.log("[DevMode] Pad press detected - note:",n,"velocity:",s),this.padStates[n]=!0,this.eventHandlers.padPress?(console.log("[DevMode] Calling padPress handler"),this.eventHandlers.padPress(n,s)):console.log("[DevMode] No padPress handler registered!")),(o===128||o===144&&s===0)&&(console.log("[DevMode] Pad release detected - note:",n),this.padStates[n]=!1,this.eventHandlers.padRelease&&this.eventHandlers.padRelease(n)),o===176&&(this.eventHandlers.encoder&&n>=110&&n<=113?this.eventHandlers.encoder(n-110,s):this.eventHandlers.button&&this.eventHandlers.button(n,s))}on(e,t){this.eventHandlers.hasOwnProperty(e)&&(this.eventHandlers[e]=t)}getPadStates(){return[...this.padStates]}isPadPressed(e){return this.padStates[e]||!1}}class Ie{constructor(){this.midiAccess=null,this.selectedOutput=null,this.isSupported=typeof navigator<"u"&&"requestMIDIAccess"in navigator,this.activeNotes=new Map,this.holdDuration=1e3,this.octaveRange=0,this.isHolding=!1,this.devMode=null}async init(){if(!this.isSupported)throw new Error("WebMIDI not supported in this browser");try{return f("midi","[MIDI] Requesting MIDI access with SysEx permission..."),this.midiAccess=await navigator.requestMIDIAccess({sysex:!0}),f("midi","[MIDI] ✓ MIDI access granted with SysEx support"),this.midiAccess.onstatechange=()=>{this._onDeviceStateChange()},!0}catch(e){throw ie("[MIDI] ✗ MIDI initialization failed:",e),new Error(`MIDI initialization failed: ${e.message}`)}}getOutputDevices(){return this.midiAccess?Array.from(this.midiAccess.outputs.values()).map(e=>({id:e.id,name:e.name})):[]}selectOutputDevice(e){if(!this.midiAccess)return!1;const t=this.midiAccess.outputs.get(e);return t?(this.selectedOutput=t,this.devMode&&(this.devMode.output=t),!0):!1}getDevMode(){return this.devMode||(this.devMode=new xe(this.selectedOutput)),this.devMode}setHoldDuration(e){this.holdDuration=Math.max(100,Math.min(e,3e4))}setOctaveRange(e){this.octaveRange=Math.max(0,Math.min(e,2))}noteOn(e,t=100){if(!(!this.selectedOutput||e<0||e>127))try{this.selectedOutput.send([144,e,t])}catch(n){console.error("MIDI send error:",n)}}noteOff(e){if(!(!this.selectedOutput||e<0||e>127))try{this.selectedOutput.send([128,e,0])}catch(t){console.error("MIDI send error:",t)}}playNote(e,t=100,n=null){const s=n!==null?n:this.holdDuration;this._getOctaveNotes(e).forEach(o=>{this.noteOn(o,t),this.isHolding?this.activeNotes.set(o,{velocity:t,time:Date.now()}):setTimeout(()=>{this.noteOff(o)},s)})}playChord(e,t=100,n=null,s=0){e.forEach((i,o)=>{setTimeout(()=>{this.playNote(i,t,n)},o*s)})}enableHold(){this.isHolding=!0,this.activeNotes.clear()}disableHold(){this.isHolding=!1,this.releaseAllNotes()}releaseAllNotes(){for(const[e]of this.activeNotes)this.noteOff(e);this.activeNotes.clear()}allNotesOff(){if(this.selectedOutput){try{for(let e=0;e<16;e++)this.selectedOutput.send([176+e,123,0])}catch(e){console.error("MIDI send error:",e)}this.activeNotes.clear()}}_getOctaveNotes(e){const t=[e];for(let n=1;n<=this.octaveRange;n++){const s=e+12*n,i=e-12*n;s<=127&&t.push(s),i>=0&&t.push(i)}return t}_onDeviceStateChange(){this.selectedOutput&&(this.midiAccess.outputs.get(this.selectedOutput.id)||(this.selectedOutput=null))}setNoteHandler(e,t=!1){if(this.noteHandler=e,this.devModeActive=t,this.midiAccess){const n=this.midiAccess.inputs.values();for(const s of n)e?s.onmidimessage=i=>this._handleMidiInput(i):s.onmidimessage=null}}_handleMidiInput(e){const[t,n,s]=e.data,i=t&240,o=t&15;if(this.devModeActive&&(f("midi","[MIDI IN] Status:",t.toString(16).padStart(2,"0").toUpperCase(),"Channel:",o,"Note/Data1:",n,"Velocity/Data2:",s,"Type:",i.toString(16).padStart(2,"0").toUpperCase()),this.devMode&&this.devMode.handleMidiMessage(e.data)),this.devModeActive&&o===15){if(f("midi","[DEV MODE] Channel 16 message detected! Pad ID:",n,"Velocity:",s),i===144||i===128){const r=i===128?0:s,d=n;f("midi","[DEV MODE] Triggering handler with pad ID:",d,"velocity:",r),this.noteHandler&&this.noteHandler(d,r)}return}if(i===144||i===128){const r=i===128?0:s;f("midi","[NORMAL MODE] Note event - Note:",n,"Velocity:",r),this.noteHandler&&this.noteHandler(n,r)}}sendSysEx(e){if(!this.selectedOutput){fe("[SYSEX] ⚠️ No MIDI output device selected - cannot send SysEx");return}const t=e.map(n=>n.toString(16).padStart(2,"0").toUpperCase()).join(" ");f("midi",`[SYSEX] Sending to ${this.selectedOutput.name}:`,t);try{this.selectedOutput.send(e),f("midi","[SYSEX] ✓ Sent successfully")}catch(n){ie("[SYSEX] ✗ Send error:",n)}}enterExquisDeveloperMode(){f("midi","[DEV MODE] 🔧 Entering Exquis Developer Mode...");const e=[240,0,33,126,127,0,1,247];this.sendSysEx(e),f("midi","[DEV MODE] ✓ Developer Mode command sent (pads should now send pad IDs on channel 16)")}exitExquisDeveloperMode(){f("midi","[DEV MODE] 🔧 Exiting Exquis Developer Mode...");const e=[240,0,33,126,127,0,0,247];this.sendSysEx(e),f("midi","[DEV MODE] ✓ Exit command sent (pads should return to normal mode)")}getStatus(){var t;const e={isSupported:this.isSupported,isInitialized:this.midiAccess!==null,hasDevice:this.selectedOutput!==null,deviceName:((t=this.selectedOutput)==null?void 0:t.name)||null,isHolding:this.isHolding,activeNoteCount:this.activeNotes.size,holdDuration:this.holdDuration,octaveRange:this.octaveRange};return e.isEnabled=e.isInitialized,e}_oldGetStatus(){var e;return{isSupported:this.isSupported,isInitialized:this.midiAccess!==null,hasDevice:this.selectedOutput!==null,deviceName:((e=this.selectedOutput)==null?void 0:e.name)||null,isHolding:this.isHolding,activeNoteCount:this.activeNotes.size,holdDuration:this.holdDuration,octaveRange:this.octaveRange}}}const p=new Ie;class Me{get name(){throw new Error("BaseDevice.name must be implemented by subclass")}get type(){throw new Error("BaseDevice.type must be implemented by subclass")}get capabilities(){throw new Error("BaseDevice.capabilities must be implemented by subclass")}get gridType(){throw new Error("BaseDevice.gridType must be implemented by subclass")}get rowCount(){throw new Error("BaseDevice.rowCount must be implemented by subclass")}get totalPads(){throw new Error("BaseDevice.totalPads must be implemented by subclass")}getRowLength(e){throw new Error("BaseDevice.getRowLength must be implemented by subclass")}getPadIndex(e,t){throw new Error("BaseDevice.getPadIndex must be implemented by subclass")}getRowCol(e){throw new Error("BaseDevice.getRowCol must be implemented by subclass")}getMidiNote(e,t,n=48){throw new Error("BaseDevice.getMidiNote must be implemented by subclass")}getCellCenter(e,t,n=48){throw new Error("BaseDevice.getCellCenter must be implemented by subclass")}getViewBox(e="portrait"){throw new Error("BaseDevice.getViewBox must be implemented by subclass")}getPadPoints(e,t,n){throw new Error("BaseDevice.getPadPoints must be implemented by subclass")}getNeighbors(e,t){throw new Error("BaseDevice.getNeighbors must be implemented by subclass")}getGridDistance(e,t,n,s){throw new Error("BaseDevice.getGridDistance must be implemented by subclass")}setGridMode(e){}getGridMode(){return"default"}async enterProgrammerMode(e){}async exitProgrammerMode(e){}highlightPads(e,t){}_sendSysEx(e,t){if(!t){console.warn(`[${this.name}] No MIDI output - cannot send SysEx`);return}try{t.send(e)}catch(n){console.error(`[${this.name}] SysEx send error:`,n)}}}class we{constructor({hasDevMode:e=!1,hasLEDControl:t=!1,supportsSysEx:n=!1,gridType:s="square",layoutModes:i=["default"],hasPadId:o=!1,midiChannels:r=[0]}={}){this.hasDevMode=e,this.hasLEDControl=t,this.supportsSysEx=n,this.gridType=s,this.layoutModes=i,this.hasPadId=o,this.midiChannels=r}}class ae extends Me{constructor(){super(),this.currentGridMode="intervals"}get name(){return"Exquis"}get type(){return"exquis"}get capabilities(){return new we({hasDevMode:!0,hasLEDControl:!0,supportsSysEx:!0,gridType:"hex",layoutModes:["intervals","chromatic"],hasPadId:!0,midiChannels:[15]})}get gridType(){return"hex"}get rowCount(){return M}get totalPads(){return 61}getRowLength(e){return B(e)}getPadIndex(e,t){return this._getRowStart()[e]+t}getRowCol(e){const t=this._getRowStart();for(let n=0;n<this.rowCount;n++)if(e>=t[n]){const s=e-t[n];if(s>=0&&s<this.getRowLength(n))return{row:n,col:s}}throw new Error(`Invalid pad index: ${e}`)}getMidiNote(e,t,n=48){return n+this.getPadIndex(e,t)}getCellCenter(e,t,n=48){return q(e,t,n)}getViewBox(e="portrait"){return Ce(e)}getPadPoints(e,t,n){return ye(e,t,n)}getNeighbors(e,t){return Ee(e,t)}getGridDistance(e,t,n,s){return oe(e,t,n,s)}setGridMode(e){if(e!=="intervals"&&e!=="chromatic")throw new Error(`Invalid grid mode: ${e}. Must be 'intervals' or 'chromatic'.`);this.currentGridMode=e}getGridMode(){return this.currentGridMode}async enterProgrammerMode(e){if(!e)throw new Error("No MIDI output available for Exquis Developer Mode");const t=[240,0,33,126,127,0,1,247];this._sendSysEx(t,e),console.log("[Exquis] Entered Developer Mode")}async exitProgrammerMode(e){if(!e)return;const t=[240,0,33,126,127,0,0,247];this._sendSysEx(t,e),console.log("[Exquis] Exited Developer Mode")}highlightPads(e,t){if(!t)return;const n=[240,0,33,126,127],s=4;for(const{padIndex:i,color:o}of e){const r=[...n,s,i&127,(o.r||0)&127,(o.g||0)&127,(o.b||0)&127,0,247];this._sendSysEx(r,t)}}_getRowStart(){return this.currentGridMode==="chromatic"?H:L}getIntervalVectors(){return Se}getHexGeometry(){return R}getChromaticRowStarts(){return H}getIntervalsRowStarts(){return L}}const $=new ae;function De(a){return B(a)}const Pe=L,F=H;function j(a){$.setGridMode(a)}function He(){return $.getGridMode()==="chromatic"?F:Pe}new Proxy({},{get(a,e){const t=He();if(e==="length")return t.length;const n=parseInt(e);return isNaN(n)?t[e]:t[n]}});function I(a,e){return $.getPadIndex(a,e)}function Be(a){return $.getRowCol(a)}function de(a,e,t,n){return oe(a,e,t,n)}class E{constructor(e="Untitled"){this.name=e,this.fingerings=new Map,this.metadata={key:null,setType:null,baseMidi:48,createdAt:Date.now(),modifiedAt:Date.now()}}setFingering(e,t,n,s){const i=`${e},${t}`;this.fingerings.set(i,{hand:n,finger:s}),this.metadata.modifiedAt=Date.now()}getFingering(e,t){const n=`${e},${t}`;return this.fingerings.get(n)||null}removeFingering(e,t){const n=`${e},${t}`;this.fingerings.delete(n),this.metadata.modifiedAt=Date.now()}clearAll(){this.fingerings.clear(),this.metadata.modifiedAt=Date.now()}getPadsForHand(e){const t=[];for(const[n,s]of this.fingerings)if(s.hand===e){const[i,o]=n.split(",").map(Number);t.push({row:i,col:o,finger:s.finger})}return t}getPadsForFinger(e,t=null){const n=[];for(const[s,i]of this.fingerings)if(i.finger===e&&(!t||i.hand===t)){const[o,r]=s.split(",").map(Number);n.push({row:o,col:r,hand:i.hand})}return n}toJSON(){return{name:this.name,fingerings:Array.from(this.fingerings.entries()),metadata:this.metadata}}static fromJSON(e){const t=new E(e.name);return t.fingerings=new Map(e.fingerings),t.metadata=e.metadata,t}}class Ne{constructor(){this.fingerWeights={1:.8,2:1,3:.9,4:.6,5:.4},this.handSizes={small:{maxStretch:2.5,comfortableStretch:1.5},medium:{maxStretch:3,comfortableStretch:2},large:{maxStretch:3.5,comfortableStretch:2.5}},this.currentHandSize="medium"}setHandSize(e){e==="custom"?this.currentHandSize="custom":this.handSizes[e]&&(this.currentHandSize=e)}setCustomHandprint(e){const t=Object.values(e),n=Math.max(...t),s=t.reduce((i,o)=>i+o,0)/t.length;this.handSizes.custom={maxStretch:n*1.1,comfortableStretch:s,measurements:e},this.currentHandSize="custom"}analyzePattern(e){let t=100;const n=[];return["left","right"].forEach(s=>{const i=e.getPadsForHand(s);if(i.length===0)return;const o=this._analyzeSpan(i,s,n);t-=o;const r=this._analyzeFingerStrength(i,n);t+=r;const d=this._analyzeFingerCrossings(i,s,n);t-=d}),{score:Math.max(0,Math.min(100,t)),issues:n,recommendation:this._getRecommendation(t)}}suggestFingerings(e,t,n=48){if(e.length===0)return[];const s=new Map;e.forEach(r=>{const d=I(r.row,r.col),c=n+d,l=c%12;if(!s.has(l))s.set(l,{...r,pc:l,midiNote:c});else{const h=s.get(l);(r.row<h.row||r.row===h.row&&r.col<h.col)&&s.set(l,{...r,pc:l,midiNote:c})}});const i=Array.from(s.values());let o=i;return i.length>5&&(o=[...i].sort((r,d)=>{const c=r.row*2+r.col,l=d.row*2+d.col;return c-l}).slice(0,5)),this._assignFingersAnatomically(o,t)}_assignFingersAnatomically(e,t){if(e.length===0)return[];const s=[...e].sort((c,l)=>c.row!==l.row?c.row-l.row:t==="right"?c.col-l.col:l.col-c.col)[0],i=[];i.push({row:s.row,col:s.col,hand:t,finger:1,score:1});const o=e.filter(c=>!(c.row===s.row&&c.col===s.col));if(o.length===0)return i;const r=o.map(c=>{const l=c.row-s.row,h=c.col-s.col,g=Math.sqrt(l*l+h*h),m=t==="right"?l+h:l-h;return{pad:c,distance:g,directionScore:m,score:m*2-g*.5}}).sort((c,l)=>l.score-c.score),d=[2,3,4,5];return r.slice(0,4).forEach((c,l)=>{i.push({row:c.pad.row,col:c.pad.col,hand:t,finger:d[l],score:.8})}),i}_analyzeSpan(e,t,n){const s=this.handSizes[this.currentHandSize];let i=0;const o=[...e].sort((r,d)=>r.finger-d.finger);for(let r=0;r<o.length-1;r++){const d=o[r],c=o[r+1];if(d.finger===c.finger)continue;const l=de(d.row,d.col,c.row,c.col);l>s.maxStretch?(i+=20,n.push({type:"excessive_stretch",hand:t,fingers:[d.finger,c.finger],distance:l})):l>s.comfortableStretch&&(i+=5,n.push({type:"uncomfortable_stretch",hand:t,fingers:[d.finger,c.finger],distance:l}))}return i}_analyzeFingerStrength(e,t){let n=0;return e.forEach(s=>{const i=this.fingerWeights[s.finger];i>=.9?n+=2:i<=.5&&(n-=1)}),n}_analyzeFingerCrossings(e,t,n){let s=0;const i=new Set,o=[...e].sort((r,d)=>r.finger-d.finger);for(let r=0;r<o.length-1;r++){const d=o[r],c=o[r+1],l=`${d.finger}-${c.finger}`;i.has(l)||d.row>c.row&&(s+=5,i.add(l),n.push({type:"finger_crossing",hand:t,fingers:[d.finger,c.finger]}))}return s}_getRecommendation(e){return e>=90?"Excellent ergonomics!":e>=75?"Good fingering, comfortable to play":e>=60?"Acceptable, but could be improved":e>=40?"Uncomfortable, consider revising":"Poor ergonomics, recommend different fingering"}_suggestMultiHandFingering(e){const t=Math.floor(e.length/2),n=e.slice(0,t),s=e.slice(t);return[...this.suggestFingerings(n,"left"),...this.suggestFingerings(s,"right")]}}const N=new Ne,x={PATTERNS:"exquisPatterns",SETTINGS:"exquisSettings",RECENT_PATTERNS:"exquisRecentPatterns"};function Ae(a,e){const t=T();t[a]={...e,savedAt:Date.now()},localStorage.setItem(x.PATTERNS,JSON.stringify(t)),Te(a)}function Fe(a){return T()[a]||null}function Le(a){const e=T();return e[a]?(delete e[a],localStorage.setItem(x.PATTERNS,JSON.stringify(e)),Oe(a),!0):!1}function T(){try{const a=localStorage.getItem(x.PATTERNS);return a?JSON.parse(a):{}}catch(a){return console.error("Error loading patterns:",a),{}}}function Re(){return Object.keys(T()).sort()}function S(a){localStorage.setItem(x.SETTINGS,JSON.stringify(a))}function $e(){try{const a=localStorage.getItem(x.SETTINGS);return a?JSON.parse(a):re()}catch(a){return console.error("Error loading settings:",a),re()}}function re(){return{orientation:"portrait",labelMode:"pc",baseMidi:48,midiHoldDuration:1e3,midiOctaveRange:0,handSize:"medium",theme:"light"}}function Te(a){let e=ce();e=e.filter(t=>t!==a),e.unshift(a),e=e.slice(0,10),localStorage.setItem(x.RECENT_PATTERNS,JSON.stringify(e))}function Oe(a){let e=ce();e=e.filter(t=>t!==a),localStorage.setItem(x.RECENT_PATTERNS,JSON.stringify(e))}function ce(){try{const a=localStorage.getItem(x.RECENT_PATTERNS);return a?JSON.parse(a):[]}catch{return[]}}function _e(a,e,t){const n=[];function s(i,o){const r=o.length;if(r>=e&&r<=t&&n.push([...o]),r!==t)for(let d=i;d<a.length;d++)o.push(a[d]),s(d+1,o),o.pop()}return s(0,[]),n}function ke(a,e,t=48,n=null){const s=new Set(a),i=[],o=n?e.filter(r=>r.hand===n):e;for(const r of o){const d=_e(r.positions,3,5);for(const c of d){const l=r.baseMidi||t,h=c.map(m=>{const v=I(m.row,m.col),C=l+v;return P(C)}),g=new Set(h);if([...s].every(m=>g.has(m))&&g.size>=s.size){const m={handprintId:r.id,hand:r.hand,comfortRating:r.comfortRating||50,baseMidi:l,midiDevice:r.midiDevice,capturedAt:r.capturedAt,positions:c.map(v=>{const C=I(v.row,v.col),D=l+C;return{row:v.row,col:v.col,padIndex:C,midiNote:D,finger:v.finger,pitchClass:P(D)}}),score:0,geometricScore:0,ergonomicScore:0};i.push(m)}}}return i}function je(a){const e=a.map(t=>t.finger).sort((t,n)=>t-n);for(let t=1;t<e.length;t++)if(e[t]!==e[t-1]+1)return!1;return!0}function qe(a){let e=0;for(let t=0;t<a.length;t++)for(let n=t+1;n<a.length;n++){const s=a[n].col-a[t].col,i=a[n].row-a[t].row,o=Math.sqrt(s*s+i*i);e=Math.max(e,o)}return e}function ze(a){const e=Ge(a),t=Ue(a),n=Ve(a),s=e*.4+t*.3+n*.3;return{...a,score:Math.round(s),comfortScore:Math.round(e),geometricScore:Math.round(t),ergonomicScore:Math.round(n)}}function Ge(a){return a.comfortRating||50}function Ue(a){const e=qe(a.positions);let t;e<=3?t=100:e<=5?t=100-(e-3)*15:e<=7?t=70-(e-5)*15:t=Math.max(0,40-(e-7)*10);const n=a.positions.map(d=>d.row),s=Math.min(...n),o=Math.max(...n)-s,r=o<=2?100:Math.max(0,100-(o-2)*20);return(t+r)/2}function Ve(a){let e=50;je(a.positions)&&(e+=30);const t=a.positions.length;t===3||t===4?e+=20:t===5&&(e+=10);const n=a.positions.map(s=>s.finger).sort((s,i)=>s-i);return n.includes(1)&&n.includes(5)&&!n.includes(2)&&!n.includes(3)&&!n.includes(4)&&(e-=30),n.length===2&&n[0]===1&&n[1]===5&&(e-=20),Math.max(0,Math.min(100,e))}function Je(a){return a.map(e=>ze(e)).sort((e,t)=>t.score-e.score)}function We(a,e=null){const t=e?a.filter(r=>r.hand===e):a;if(t.length===0)return null;const n={hand:e,fingerDistances:{},spanDistances:[],fingerAssignments:{},chordShapes:[],avgComfort:0};let s=0;for(const r of t){if(s+=r.comfortRating||50,r.measurements)for(const[h,g]of Object.entries(r.measurements))n.fingerDistances[h]||(n.fingerDistances[h]=[]),n.fingerDistances[h].push(g);const d=r.positions;let c=0;for(let h=0;h<d.length;h++)for(let g=h+1;g<d.length;g++){const m=d[g].col-d[h].col,v=d[g].row-d[h].row,C=Math.sqrt(m*m+v*v);c=Math.max(c,C)}n.spanDistances.push(c);for(const h of d){const g=`r${h.row}c${h.col}`;n.fingerAssignments[g]||(n.fingerAssignments[g]={});const m=h.finger;n.fingerAssignments[g][m]=(n.fingerAssignments[g][m]||0)+1}const l=Qe(r);l&&n.chordShapes.push(l)}n.avgComfort=s/t.length;for(const[r,d]of Object.entries(n.fingerDistances)){const c=d.reduce((h,g)=>h+g,0)/d.length,l=d.reduce((h,g)=>h+Math.pow(g-c,2),0)/d.length;n.fingerDistances[r]={avg:c,stdDev:Math.sqrt(l),samples:d.length}}const i=n.spanDistances.reduce((r,d)=>r+d,0)/n.spanDistances.length,o=n.spanDistances.reduce((r,d)=>r+Math.pow(d-i,2),0)/n.spanDistances.length;return n.avgSpan=i,n.spanStdDev=Math.sqrt(o),n}function Qe(a){const e=a.positions;if(e.length<3)return null;const t=[...e].sort((i,o)=>i.finger-o.finger),n=t[0],s=t.map(i=>({finger:i.finger,rowOffset:i.row-n.row,colOffset:i.col-n.col,distance:Math.sqrt(Math.pow(i.row-n.row,2)+Math.pow(i.col-n.col,2))}));return{numFingers:e.length,fingers:t.map(i=>i.finger),geometry:s,comfort:a.comfortRating||50}}function Ye(a,e,t){const n=`r${a}c${e}`,s=t.fingerAssignments[n];if(!s)return null;let i=null,o=0;for(const[r,d]of Object.entries(s))d>o&&(o=d,i=parseInt(r));return i}function Ke(a,e){if(!e||e.chordShapes.length===0)return 50;let t=0;for(const n of e.chordShapes){let s=0;a.positions.length===n.numFingers&&(s+=20);const i=Xe(a.positions),o=Math.abs(i-e.avgSpan),r=Math.max(0,30-o*10);s+=r,s+=n.comfort/2,t=Math.max(t,s)}return Math.min(100,t)}function Xe(a){let e=0;for(let t=0;t<a.length;t++)for(let n=t+1;n<a.length;n++){const s=a[n].col-a[t].col,i=a[n].row-a[t].row,o=Math.sqrt(s*s+i*i);e=Math.max(e,o)}return e}function Ze(a,e=48,t=5){const n=new Map;for(const r of a)n.set(r,[]);for(let r=0;r<=t;r++)for(let d=0;d<(r%2===0?6:5);d++){const c=I(r,d),l=e+c,h=P(l);n.has(h)&&n.get(h).push({row:r,col:d,padIndex:c,midiNote:l,pc:h})}const s=[],i=Array.from(n.keys());function o(r,d){if(r===i.length){s.push([...d]);return}const c=i[r],h=n.get(c).slice(0,3);for(const g of h)d.push(g),o(r+1,d),d.pop()}return o(0,[]),s}function et(a,e,t=null){if(a.length===0)return[];a.length>5&&(a=a.slice(0,5));const n=[...a].sort((o,r)=>o.row!==r.row?o.row-r.row:e==="right"?o.col-r.col:r.col-o.col),s=new Set,i=[];for(let o=0;o<n.length;o++){const r=n[o];let d=null;if(t){const c=Ye(r.row,r.col,t);c&&!s.has(c)&&(d=c)}if(!d){for(let c=1;c<=5;c++)if(!s.has(c)){d=c;break}}d&&(s.add(d),i.push({...r,finger:d,hand:e}))}return i}function tt(a,e){let t=50;if(e){const i=Ke(a,e);t=(t+i)/2}const n=nt(a.positions);n<1.5?t+=10:n<=3?t+=5:n>4&&(t-=20);const s=a.positions.reduce((i,o)=>i+o.row,0)/a.positions.length;return t+=Math.max(0,10-s*2),Math.min(100,Math.max(0,t))}function nt(a){let e=0;for(let t=0;t<a.length;t++)for(let n=t+1;n<a.length;n++){const s=de(a[t].row,a[t].col,a[n].row,a[n].col);e=Math.max(e,s)}return e}function st(a,e,t=48,n="right",s=5){const i=We(e,n),o=Ze(a,t);if(o.length===0)return[];const r=o.map(d=>{const c=et(d,n,i),l={hand:n,baseMidi:t,positions:c,targetPitchClasses:a,score:0};return l.score=tt(l,i),l});return r.sort((d,c)=>c.score-d.score),r.slice(0,s)}const it={major:[0,4,7],minor:[0,3,7],dim:[0,3,6],aug:[0,4,8],sus2:[0,2,7],sus4:[0,5,7],5:[0,7],maj7:[0,4,7,11],min7:[0,3,7,10],dom7:[0,4,7,10],dim7:[0,3,6,9],hdim7:[0,3,6,10],minmaj7:[0,3,7,11],aug7:[0,4,8,10],augmaj7:[0,4,8,11],"7sus4":[0,5,7,10],"7sus2":[0,2,7,10],6:[0,4,7,9],min6:[0,3,7,9],"6/9":[0,4,7,9,14],"min6/9":[0,3,7,9,14],add2:[0,2,4,7],add9:[0,4,7,14],add4:[0,4,5,7],minadd9:[0,3,7,14],maj9:[0,4,7,11,14],min9:[0,3,7,10,14],dom9:[0,4,7,10,14],dom7b9:[0,4,7,10,13],"dom7#9":[0,4,7,10,15],"maj7#9":[0,4,7,11,15],min7b9:[0,3,7,10,13],minadd9:[0,3,7,14],maj11:[0,4,7,11,14,17],min11:[0,3,7,10,14,17],dom11:[0,4,7,10,14,17],"maj7#11":[0,4,7,11,18],"dom7#11":[0,4,7,10,18],min11b5:[0,3,6,10,14,17],maj13:[0,4,7,11,14,21],min13:[0,3,7,10,14,21],dom13:[0,4,7,10,14,21],dom7b13:[0,4,7,10,20],"maj7#11b13":[0,4,7,11,18,20],"7b5":[0,4,6,10],"7#5":[0,4,8,10],"7b5b9":[0,4,6,10,13],"7b5#9":[0,4,6,10,15],"7#5b9":[0,4,8,10,13],"7#5#9":[0,4,8,10,15],alt7:[0,4,6,10,13,15,20],dimmaj7:[0,3,6,11],dim9:[0,3,6,9,14],aug9:[0,4,8,10,14],quartal:[0,5,10],quartal4:[0,5,10,15],quintal:[0,7,14],shell_maj7:[4,11],shell_min7:[3,10],shell_dom7:[4,10],rootless_A_maj7:[4,7,11,14],rootless_A_dom7:[4,7,10,14],rootless_B_maj7:[7,11,14,16],rootless_B_dom7:[7,10,13,16],upper_maj:[7,11,14],upper_min:[7,10,14],sowhat:[0,5,10,14,19],poly_D_C:[0,2,4,5,9],poly_E_C:[0,4,7,11],cluster_maj2:[0,2,4],cluster_min2:[0,1,2],cluster_4:[0,1,2,3]},rt={major:"Major",minor:"Minor",dim:"Diminished",aug:"Augmented",sus2:"Sus2",sus4:"Sus4",5:"Power Chord (5)",maj7:"Major 7th",min7:"Minor 7th",dom7:"Dominant 7th",dim7:"Diminished 7th",hdim7:"Half-Diminished 7th",minmaj7:"Minor-Major 7th",aug7:"Augmented 7th",augmaj7:"Augmented Major 7th","7sus4":"7sus4","7sus2":"7sus2",6:"Major 6th",min6:"Minor 6th","6/9":"6/9","min6/9":"Minor 6/9",add2:"Add2",add9:"Add9",add4:"Add4",minadd9:"Minor Add9",maj9:"Major 9th",min9:"Minor 9th",dom9:"Dominant 9th",dom7b9:"7b9","dom7#9":"7#9","maj7#9":"Major 7#9",min7b9:"Minor 7b9",maj11:"Major 11th",min11:"Minor 11th",dom11:"Dominant 11th","maj7#11":"Major 7#11","dom7#11":"7#11",min11b5:"Minor 11b5",maj13:"Major 13th",min13:"Minor 13th",dom13:"Dominant 13th",dom7b13:"7b13","maj7#11b13":"Major 7#11b13","7b5":"7b5","7#5":"7#5","7b5b9":"7b5b9","7b5#9":"7b5#9","7#5b9":"7#5b9","7#5#9":"7#5#9",alt7:"Altered Dominant",dimmaj7:"Diminished Major 7th",dim9:"Diminished 9th",aug9:"Augmented 9th",quartal:"Quartal (3-note)",quartal4:"Quartal (4-note)",quintal:"Quintal",shell_maj7:"Shell Voicing - Maj7",shell_min7:"Shell Voicing - Min7",shell_dom7:"Shell Voicing - Dom7",rootless_A_maj7:"Rootless A - Maj7",rootless_A_dom7:"Rootless A - Dom7",rootless_B_maj7:"Rootless B - Maj7",rootless_B_dom7:"Rootless B - Dom7",upper_maj:"Upper Structure - Major",upper_min:"Upper Structure - Minor",sowhat:"So What Chord",poly_D_C:"D/C Polychord",poly_E_C:"E/C Polychord",cluster_maj2:"Major 2nd Cluster",cluster_min2:"Minor 2nd Cluster",cluster_4:"4-Note Cluster"},ot=["C","C#/Db","D","D#/Eb","E","F","F#/Gb","G","G#/Ab","A","A#/Bb","B"];function at(a,e){const t=it[e];if(!t)throw new Error(`Unknown chord quality: ${e}`);return t.map(n=>(a+n)%12)}function A(a,e){const t=ot[a],n=rt[e]||e;return`${t} ${n}`}class dt{constructor(){f("app","[APP] Constructor started"),j("intervals"),f("app","[APP] Grid mode set to intervals"),this.settings=$e(),this.currentPattern=new E,this.currentFinger=1,this.currentHand="right",this.fingeringMode=!1,this.handprintMode=!1,this.handprintCaptureState=null,this.handprintCaptures=[],this.handprintCaptureHand="right",this.handprintSessionBaseMidi=null,this.handprintSessionID=null,this.handprintSessionCount=0,this.savedHandprints=this.settings.handprints||[],this.currentSuggestions=[],this.currentSuggestionIndex=0,this.currentSuggestionRating=3,this.suggestionEditMode=!1,this.editingPad=null,this.chordCaptureActive=!1,this.chordCaptureHand="right",this.chordCaptureSequence=[],this.chordCapturePitchClasses=[],this.chordCaptureRoot=0,this.chordCaptureQuality="dom7",this.chordCaptureState=null,this.chordCaptureSessionCount=0,this.savedChordFingerings=this.settings.chordFingerings||[],this.device=new ae,f("app","[APP] Device created:",this.device.name),this.gridElement=document.getElementById("grid"),f("app","[APP] Grid element:",this.gridElement),this.gridRenderer=new ve(this.gridElement,this.device),f("app","[APP] GridRenderer created with device:",this.device.name),this.initUI(),this.loadStoredSettings(),this.updatePatternMetadata(),this.updateHandprintList(),f("app","[APP] About to call initial render()"),this.render(),f("app","[APP] Constructor completed")}initUI(){var o,r,d,c,l,h,g,m,v,C,D,z,G,U,V,J,W,Q,Y,K,X,Z,ee,te,ne,se;document.querySelectorAll('input[name="ori"]').forEach(u=>{u.addEventListener("change",()=>{this.settings.orientation=u.value,this.render(),S(this.settings)})}),document.querySelectorAll('input[name="lab"]').forEach(u=>{u.addEventListener("change",()=>{this.settings.labelMode=u.value,this.render(),S(this.settings)})}),document.getElementById("key").addEventListener("change",()=>{this.updatePatternMetadata(),this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("set").addEventListener("change",u=>{const y=u.target.value==="custom";document.getElementById("customPC").disabled=!y,this.updatePatternMetadata(),this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("customPC").addEventListener("input",()=>{this.render(),this.updateMIDIHoldIfActive()}),document.getElementById("baseMidi").addEventListener("input",u=>{this.settings.baseMidi=parseInt(u.target.value),this.render(),this.updateMIDIHoldIfActive(),S(this.settings)}),document.getElementById("fingeringMode").addEventListener("change",u=>{this.fingeringMode=u.target.checked,document.getElementById("fingeringModeInfo").style.display=this.fingeringMode?"block":"none",document.querySelectorAll(".finger-btn").forEach(y=>{y.disabled=!this.fingeringMode}),this.render()}),document.getElementById("fingeringHand").addEventListener("change",u=>{this.currentHand=u.target.value});for(let u=1;u<=5;u++)document.getElementById(`fingBtn${u}`).addEventListener("click",()=>{this.currentFinger=u,this.updateFingerButtonState()});document.addEventListener("keydown",u=>{this.fingeringMode&&u.key>="1"&&u.key<="5"&&(this.currentFinger=parseInt(u.key),this.updateFingerButtonState())}),document.getElementById("clearFingerings").addEventListener("click",()=>{this.currentPattern.clearAll(),this.render()}),document.getElementById("suggestFingerings").addEventListener("click",()=>{this.suggestFingerings()}),document.getElementById("savePattern").addEventListener("click",()=>this.saveCurrentPattern()),document.getElementById("loadPattern").addEventListener("change",u=>{u.target.value&&this.loadPatternByName(u.target.value)}),document.getElementById("deletePattern").addEventListener("click",()=>this.deleteCurrentPattern()),document.getElementById("exportPattern").addEventListener("click",()=>this.exportPattern()),document.getElementById("importPatternBtn").addEventListener("click",()=>{document.getElementById("importPattern").click()}),document.getElementById("importPattern").addEventListener("change",u=>this.importPattern(u)),document.getElementById("enableMidi").addEventListener("click",()=>this.initMIDI()),document.getElementById("midiDevice").addEventListener("change",u=>{u.target.value&&(p.selectOutputDevice(u.target.value),this.updateMIDIStatus())});const e=document.getElementById("midiHoldDuration"),t=document.getElementById("holdDurationValue");e==null||e.addEventListener("input",u=>{const y=parseInt(u.target.value);t.textContent=`${(y/1e3).toFixed(1)}s`,p.setHoldDuration(y),this.settings.midiHoldDuration=y,S(this.settings)});const n=document.getElementById("midiOctaveRange"),s=document.getElementById("octaveRangeValue");n==null||n.addEventListener("input",u=>{const y=parseInt(u.target.value);s.textContent=y===0?"0 (none)":`±${y}`,p.setOctaveRange(y),this.settings.midiOctaveRange=y,S(this.settings)});const i=document.getElementById("midiHoldToggle");i==null||i.addEventListener("change",u=>{u.target.checked?(p.enableHold(),this.sendHighlightedNotes()):p.disableHold()}),(o=document.getElementById("midiSendHighlighted"))==null||o.addEventListener("click",()=>{this.sendHighlightedNotes()}),(r=document.getElementById("analyzeErgo"))==null||r.addEventListener("click",()=>{this.analyzeErgonomics()}),(d=document.getElementById("handSize"))==null||d.addEventListener("change",u=>{const y=u.target.value;N.setHandSize(y),this.settings.handSize=y,S(this.settings)}),(c=document.getElementById("captureLeftHand"))==null||c.addEventListener("click",()=>{this.selectChordCaptureHand("left")}),(l=document.getElementById("captureRightHand"))==null||l.addEventListener("click",()=>{this.selectChordCaptureHand("right")}),(h=document.getElementById("startChordCapture"))==null||h.addEventListener("click",()=>{this.startChordCapture()}),(g=document.getElementById("stopChordCapture"))==null||g.addEventListener("click",()=>{this.stopChordCapture()}),(m=document.getElementById("saveCapturedFingering"))==null||m.addEventListener("click",()=>{this.saveChordFingering()}),(v=document.getElementById("discardCapturedFingering"))==null||v.addEventListener("click",()=>{this.discardChordFingering()}),(C=document.getElementById("captureComfort"))==null||C.addEventListener("input",u=>{document.getElementById("captureComfortValue").textContent=u.target.value}),(D=document.getElementById("selectLeftHand"))==null||D.addEventListener("click",()=>{this.selectHandForCapture("left")}),(z=document.getElementById("selectRightHand"))==null||z.addEventListener("click",()=>{this.selectHandForCapture("right")}),(G=document.getElementById("startHandprintCapture"))==null||G.addEventListener("click",()=>{this.startHandprintCapture()}),(U=document.getElementById("exportHandprints"))==null||U.addEventListener("click",()=>{this.exportHandprints()}),(V=document.getElementById("clearHandprints"))==null||V.addEventListener("click",()=>{this.clearAllHandprints()}),(J=document.getElementById("exportChordFingerings"))==null||J.addEventListener("click",()=>{this.exportChordFingerings()}),(W=document.getElementById("clearChordFingerings"))==null||W.addEventListener("click",()=>{this.clearAllChordFingerings()}),(Q=document.getElementById("clearChordNotes"))==null||Q.addEventListener("click",()=>{document.querySelectorAll('input[name="chordNote"]').forEach(u=>{u.checked=!1})}),(Y=document.getElementById("findChordFingerings"))==null||Y.addEventListener("click",()=>{this.findChordFingeringSuggestions()}),(K=document.getElementById("generateSuggestion"))==null||K.addEventListener("click",()=>{this.generateChordSuggestion()}),(X=document.getElementById("saveSuggestion"))==null||X.addEventListener("click",()=>{this.saveSuggestionAsPattern()}),(Z=document.getElementById("nextSuggestion"))==null||Z.addEventListener("click",()=>{this.showNextSuggestion()}),(ee=document.getElementById("comfortRating"))==null||ee.addEventListener("input",u=>{this.currentSuggestionRating=parseInt(u.target.value),document.getElementById("comfortRatingValue").textContent=u.target.value}),(te=document.getElementById("key"))==null||te.addEventListener("change",()=>{var u;(u=document.getElementById("autoSuggestChords"))!=null&&u.checked&&this.generateChordSuggestion()}),(ne=document.getElementById("set"))==null||ne.addEventListener("change",()=>{var u;(u=document.getElementById("autoSuggestChords"))!=null&&u.checked&&this.generateChordSuggestion()}),(se=document.getElementById("fingeringType"))==null||se.addEventListener("change",u=>{this.settings.fingeringType=u.target.value,S(this.settings)}),this.gridRenderer.setPadClickHandler((u,y,le,ct)=>{this.handprintMode?this.handleHandprintClick(u,y):this.suggestionEditMode?this.handleSuggestionEditClick(u,y):this.fingeringMode?this.handleFingeringClick(u,y):p.playNote(le)})}loadStoredSettings(){const e=document.querySelector(`input[name="ori"][value="${this.settings.orientation}"]`);e&&(e.checked=!0);const t=document.querySelector(`input[name="lab"][value="${this.settings.labelMode}"]`);t&&(t.checked=!0);const n=document.getElementById("baseMidi");n&&(n.value=this.settings.baseMidi);const s=document.getElementById("midiHoldDuration");s&&(s.value=this.settings.midiHoldDuration,document.getElementById("holdDurationValue").textContent=`${(this.settings.midiHoldDuration/1e3).toFixed(1)}s`,p.setHoldDuration(this.settings.midiHoldDuration));const i=document.getElementById("midiOctaveRange");if(i){i.value=this.settings.midiOctaveRange;const r=this.settings.midiOctaveRange;document.getElementById("octaveRangeValue").textContent=r===0?"0 (none)":`±${r}`,p.setOctaveRange(r)}const o=document.getElementById("handSize");o&&(o.value=this.settings.handSize,N.setHandSize(this.settings.handSize)),this.updatePatternList()}render(){if(f("app","[APP] render() called"),this.gridRenderer.setOrientation(this.settings.orientation),this.gridRenderer.setLabelMode(this.settings.labelMode),this.gridRenderer.setBaseMidi(this.settings.baseMidi),this.handprintMode?this.gridRenderer.setHighlightedPCs(new Set):this.gridRenderer.setHighlightedPCs(this.getHighlightedPCs()),this.handprintMode)if(this.handprintCaptures.length>0){const e=new E("temp_handprint");this.handprintCaptures.forEach(t=>{e.setFingering(t.row,t.col,this.handprintCaptureHand,t.finger)}),this.gridRenderer.setFingeringPattern(e)}else this.gridRenderer.setFingeringPattern(new E("empty"));else this.gridRenderer.setFingeringPattern(this.currentPattern);this.gridRenderer.setFingeringMode(this.fingeringMode||this.handprintMode),this.gridRenderer.render(),f("app","[APP] render() completed")}getHighlightedPCs(){const e=document.getElementById("set").value;if(e==="custom"){const t=document.getElementById("customPC").value;return pe(t)}else{const t=document.getElementById("key").value;return ge(t,e)}}handleFingeringClick(e,t){const n=this.currentPattern.getFingering(e,t);n&&n.hand===this.currentHand&&n.finger===this.currentFinger?this.currentPattern.removeFingering(e,t):this.currentPattern.setFingering(e,t,this.currentHand,this.currentFinger),this.render()}updateFingerButtonState(){for(let e=1;e<=5;e++){const t=document.getElementById(`fingBtn${e}`);t.style.opacity=e===this.currentFinger?"1":"0.5"}}suggestFingerings(){const e=this.getHighlightedPCs();if(e.size===0){alert("No notes highlighted. Please select a key and scale/chord first.");return}const t=[];for(let o=0;o<11;o++)for(let r=0;r<(o%2===0?6:5);r++){const d=I(o,r),l=(this.settings.baseMidi+d)%12;e.has(l)&&t.push({row:o,col:r})}if(t.length===0){alert("No pads match the selected notes in the current range.");return}const n=document.getElementById("fingeringHand").value,s=N.suggestFingerings(t,n,this.settings.baseMidi);this.currentPattern.getPadsForHand(n).forEach(o=>{this.currentPattern.removeFingering(o.row,o.col)}),s.forEach(o=>{this.currentPattern.setFingering(o.row,o.col,o.hand,o.finger)}),this.render(),alert(`Suggested fingerings for ${s.length} pads (${n} hand)`)}saveCurrentPattern(){const e=document.getElementById("patternName").value.trim();if(!e){alert("Please enter a pattern name");return}const t={...this.currentPattern.toJSON(),key:document.getElementById("key").value,set:document.getElementById("set").value,baseMidi:this.settings.baseMidi};Ae(e,t),this.updatePatternList(),document.getElementById("patternName").value="",alert(`Pattern "${e}" saved!`)}loadPatternByName(e){const t=Fe(e);if(!t){alert(`Pattern "${e}" not found`);return}this.currentPattern=E.fromJSON(t),document.getElementById("key").value=t.key,document.getElementById("set").value=t.set,this.settings.baseMidi=t.baseMidi,document.getElementById("baseMidi").value=t.baseMidi,this.render()}deleteCurrentPattern(){const e=document.getElementById("loadPattern").value;if(!e){alert("Please select a pattern to delete");return}confirm(`Delete pattern "${e}"?`)&&(Le(e),this.updatePatternList(),document.getElementById("loadPattern").value="")}exportPattern(){if(this.currentPattern.fingerings.size===0){alert("No fingerings to export. Create a fingering pattern first.");return}this.updatePatternMetadata();const e=document.getElementById("patternName");e.value.trim()&&(this.currentPattern.name=e.value.trim());let t;if(this.currentPattern.name==="Untitled"||!this.currentPattern.name.trim()){const r=this.currentPattern.metadata.key||"C",d=this.currentPattern.metadata.setType||"major",c=this.currentHand||"right",l=new Date().toISOString().slice(11,19).replace(/:/g,"");t=`${r}_${d}_${c}_${l}`}else t=this.currentPattern.name;const n=JSON.stringify(this.currentPattern.toJSON(),null,2),s=new Blob([n],{type:"application/json"}),i=URL.createObjectURL(s),o=document.createElement("a");o.href=i,o.download=`${t.replace(/[^a-z0-9]/gi,"_").toLowerCase()}.json`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(i),alert(`Exported "${this.currentPattern.name}" to JSON file`)}importPattern(e){const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=s=>{try{const i=JSON.parse(s.target.result),o=E.fromJSON(i);this.currentPattern=o,document.getElementById("patternName").value=o.name,this.render(),alert(`Imported "${o.name}" with ${o.fingerings.size} fingerings`),e.target.value=""}catch(i){alert(`Error importing file: ${i.message}`),console.error("Import error:",i)}},n.readAsText(t)}updatePatternList(){const e=document.getElementById("loadPattern"),t=Re();e.innerHTML='<option value="">-- Select Pattern --</option>',t.forEach(n=>{const s=document.createElement("option");s.value=n,s.textContent=n,e.appendChild(s)})}async initMIDI(){try{await p.init(),this.updateMIDIDeviceList(),this.updateMIDIStatus()}catch(e){this.updateMIDIStatus(e.message)}}updateMIDIDeviceList(){const e=document.getElementById("midiDevice"),t=p.getOutputDevices();e.innerHTML='<option value="">-- Select device --</option>',t.forEach(n=>{const s=document.createElement("option");s.value=n.id,s.textContent=n.name,e.appendChild(s)}),e.disabled=t.length===0}updateMIDIStatus(e=null){const t=p.getStatus(),n=document.getElementById("midiStatus");e?(n.textContent=`Error: ${e}`,n.className="error-box"):t.isSupported?t.isInitialized?t.hasDevice?(n.textContent=`Connected: ${t.deviceName}`,n.className="success-box"):(n.textContent="MIDI ready - select a device",n.className="info-box"):(n.textContent="MIDI not initialized",n.className="warning-box"):(n.textContent="WebMIDI not supported (use Chrome/Brave/Edge)",n.className="warning-box")}sendHighlightedNotes(){const e=this.getHighlightedPCs(),t=[];for(let n=0;n<39;n++){const s=this.settings.baseMidi+n,i=s%12;e.has(i)&&t.push(s)}p.playChord(t,100,null,20)}updatePatternMetadata(){const e=document.getElementById("key").value,t=document.getElementById("set").value;this.currentPattern.metadata.key=e,this.currentPattern.metadata.setType=t,this.currentPattern.metadata.modifiedAt=Date.now()}updateMIDIHoldIfActive(){const e=document.getElementById("midiHoldToggle");e&&e.checked&&p.getStatus().isHolding&&(p.releaseAllNotes(),this.sendHighlightedNotes())}analyzeErgonomics(){const e=N.analyzePattern(this.currentPattern),t=document.getElementById("ergoResult");t&&(t.innerHTML=`
        <div class="score-display">
          <div class="score-label">Ergonomic Score</div>
          <div class="score-value">${e.score}</div>
          <div class="score-recommendation">${e.recommendation}</div>
        </div>
        ${e.issues.length>0?`
          <h4>Issues Found:</h4>
          <ul class="issue-list">
            ${e.issues.map(n=>`<li class="issue-item">${this.formatIssue(n)}</li>`).join("")}
          </ul>
        `:'<div class="success-box">No ergonomic issues found!</div>'}
      `)}formatIssue(e){switch(e.type){case"excessive_stretch":return`Excessive stretch between fingers ${e.fingers.join(" and ")} (${e.hand} hand)`;case"uncomfortable_stretch":return`Uncomfortable stretch between fingers ${e.fingers.join(" and ")} (${e.hand} hand)`;case"finger_crossing":return`Possible finger crossing: fingers ${e.fingers.join(" and ")} (${e.hand} hand)`;default:return JSON.stringify(e)}}selectHandForCapture(e){this.handprintCaptureHand=e;const t=document.getElementById("selectLeftHand"),n=document.getElementById("selectRightHand");e==="left"?(t==null||t.classList.add("active"),n==null||n.classList.remove("active")):(n==null||n.classList.add("active"),t==null||t.classList.remove("active"))}async startHandprintCapture(){if(this.handprintMode){this.stopHandprintSession();return}const e=document.getElementById("startHandprintCapture");if(e.textContent="Stop Capture",e.style.background="#c44",!p.getStatus().isInitialized)try{await p.init(),this.updateMIDIDeviceList(),this.updateMIDIStatus();const n=p.getOutputDevices();if(n.length>0){const i=n.find(o=>o.name.toLowerCase().includes("exquis"))||n[0];p.selectOutputDevice(i.id),document.getElementById("midiDevice").value=i.id,this.updateMIDIStatus()}}catch(n){alert(`Cannot enable MIDI: ${n.message}

Fallback: You can click pads on the grid instead.`)}this.handprintMode=!0,this.handprintCaptureState="waiting_basenote",this.handprintCaptures=[],this.handprintSessionBaseMidi=this.settings.baseMidi,this.handprintSessionPadOffset=null,this.handprintSessionID=`session_${Date.now()}`,this.handprintSessionCount=0,this.lastHandprintNoteTime=0,this.preCaptureLabelMode=this.settings.labelMode,this.settings.labelMode="index",j("chromatic"),p.enterExquisDeveloperMode(),this.render();const t=document.getElementById("handprintCaptureStatus");t&&(t.innerHTML=`
        <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Calibration - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
          <strong style="color:#6f6;">Press bottom-left pad (0,0) to calibrate</strong><br/>
          <span style="font-size:0.85em; opacity:0.7;">This sets the reference point for your handprint</span>
          <div style="margin-top:8px; font-size:1.2em; color:#6af;">
            <strong id="handprintCounter">Waiting for calibration...</strong>
          </div>
        </div>
      `),p.setNoteHandler((n,s)=>{if(this.handprintMode&&s>0){const i=Date.now();i-this.lastHandprintNoteTime>100&&(this.lastHandprintNoteTime=i,this.handleHandprintPadID(n))}},!0)}stopHandprintSession(){const e=this.handprintSessionCount>0;p.exitExquisDeveloperMode(),this.handprintMode=!1,this.handprintCaptureState=null,this.handprintCaptures=[],this.handprintSessionBaseMidi=null,this.handprintSessionID=null,this.handprintSessionCount=0,p.setNoteHandler(null),this.preCaptureLabelMode&&(this.settings.labelMode=this.preCaptureLabelMode,this.preCaptureLabelMode=null),j("intervals");const t=document.getElementById("handprintCaptureStatus");t&&(t.innerHTML=`
        <div style="padding:8px; opacity:0.7;">
          ${e?`Session complete. Captured ${e} handprint${e>1?"s":""}.`:"Session cancelled."}
        </div>
      `,setTimeout(()=>{t.innerHTML=""},2e3));const n=document.getElementById("startHandprintCapture");n.textContent="Start Capture",n.style.background="",this.render()}handleHandprintPadID(e){if(this.handprintCaptureState==="waiting_basenote"){this.handprintSessionPadOffset=e,this.handprintCaptureState="capturing_fingers",f("handprint",`[HANDPRINT] Developer Mode calibrated: pad 0,0 has ID ${e}`);const n=document.getElementById("handprintCaptureStatus");n&&(n.innerHTML=`
          <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
            <strong>Capture Active - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
            <strong style="color:#6f6;">Press 5 fingers in order 👍 1 → 2 → 3 → 4 → 5 🤙</strong>
            <div style="margin-top:8px; font-size:1.2em; color:#6af;">
              <strong id="handprintCounter">Captured: 0/5</strong>
            </div>
          </div>
        `),this.render();return}if(this.handprintCaptureState!=="capturing_fingers"||this.handprintCaptures.length>=5)return;const t=e-this.handprintSessionPadOffset;if(this.handprintCaptures.some(n=>n.padIndex===t)){console.log("Ignoring duplicate pad:",t);return}try{const{row:n,col:s}=Be(t),i=this.handprintSessionBaseMidi+t;this.handprintCaptures.push({row:n,col:s,padIndex:t,midiNote:i,finger:this.handprintCaptures.length+1,timestamp:Date.now()});const o=document.getElementById("handprintCounter");o&&(o.textContent=`Captured: ${this.handprintCaptures.length}/5`),this.render(),this.handprintCaptures.length===5&&this.finishHandprintCapture()}catch(n){console.error("Invalid pad index:",t,"from pad ID:",e,n)}}handleHandprintClick(e,t){if(this.handprintCaptureState!=="capturing_fingers"||this.handprintCaptures.length>=5)return;const n=I(e,t);if(this.handprintCaptures.some(o=>o.padIndex===n)){console.log("Ignoring duplicate pad click:",n);return}const s=this.handprintSessionBaseMidi+n;this.handprintCaptures.push({row:e,col:t,padIndex:n,midiNote:s,finger:this.handprintCaptures.length+1,timestamp:Date.now()});const i=document.getElementById("handprintCounter");i&&(i.textContent=`Captured: ${this.handprintCaptures.length}/5 (click)`),this.render(),this.handprintCaptures.length===5&&this.finishHandprintCapture()}finishHandprintCapture(){var t,n;this.handprintCaptureState="rating";const e=document.getElementById("handprintCaptureStatus");if(e){e.innerHTML=`
        <div style="background:#243; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Handprint Captured!</strong><br/>
          How comfortable was this position?
          <div style="margin-top:12px;">
            <input type="range" id="comfortRating" min="0" max="100" value="100"
                   style="width:100%;" />
            <div style="display:flex; justify-content:space-between; font-size:0.85em; opacity:0.7;">
              <span>Uncomfortable</span>
              <span id="comfortValue">100</span>
              <span>Very Comfortable</span>
            </div>
          </div>
          <button id="saveHandprintWithRating" style="width:100%; margin-top:12px; background:#4a6;">
            Save Handprint
          </button>
          <button id="discardHandprint" style="width:100%; margin-top:4px; background:#666;">
            Discard
          </button>
        </div>
      `;const s=document.getElementById("comfortRating"),i=document.getElementById("comfortValue");s==null||s.addEventListener("input",o=>{i.textContent=o.target.value}),(t=document.getElementById("saveHandprintWithRating"))==null||t.addEventListener("click",()=>{const o=parseInt((s==null?void 0:s.value)||"100");this.saveHandprint(o)}),(n=document.getElementById("discardHandprint"))==null||n.addEventListener("click",()=>{this.discardHandprint()})}this.render()}saveHandprint(e){const t={};for(let c=0;c<5;c++)for(let l=c+1;l<5;l++){const h=this.handprintCaptures[c],g=this.handprintCaptures[l],m=Math.sqrt(Math.pow(g.row-h.row,2)+Math.pow(g.col-h.col,2)),v=`${c+1}-${l+1}`;t[v]=m}const s=p.getStatus().deviceName||"Unknown",o={id:`${this.handprintCaptureHand}_${Date.now()}`,sessionID:this.handprintSessionID,hand:this.handprintCaptureHand,orientation:this.settings.orientation,baseMidi:this.handprintSessionBaseMidi,midiDevice:s,comfortRating:e,positions:this.handprintCaptures,measurements:t,capturedAt:Date.now()};this.savedHandprints.push(o),this.settings.handprints=this.savedHandprints,S(this.settings),this.handprintSessionCount++,this.updateHandprintList();const r=document.getElementById("handprintCaptureStatus");r&&(r.innerHTML=`
        <div style="background:#243; padding:12px; border-radius:4px; margin-top:8px; color:#6f6;">
          ✓ Handprint ${this.handprintSessionCount} Saved!<br/>
          <strong>Comfort:</strong> ${e}/100<br/>
          <strong>Session total:</strong> ${this.handprintSessionCount} handprint(s)
          <div style="margin-top:8px; border-top:1px solid #444; padding-top:8px;">
            Press another pad to capture next handprint,<br/>
            or click "Stop Capture" to finish.
          </div>
        </div>
      `),this.handprintCaptures=[],this.handprintCaptureState="capturing_fingers";const d=document.getElementById("handprintCounter");d&&(d.textContent="Captured: 0/5"),this.render()}discardHandprint(){this.handprintCaptures=[],this.handprintCaptureState="capturing_fingers";const e=document.getElementById("handprintCaptureStatus");e&&(e.innerHTML=`
        <div style="background:#334; padding:12px; border-radius:4px; margin-top:8px;">
          <strong>Capture Active - ${this.handprintCaptureHand.toUpperCase()} hand</strong><br/>
          <strong style="color:#6f6;">Press 5 fingers in order 👍 1 → 2 → 3 → 4 → 5 🤙</strong>
          <div style="margin-top:8px; font-size:1.2em; color:#6af;">
            <strong id="handprintCounter">Captured: 0/5</strong>
          </div>
          <div style="margin-top:8px; padding-top:8px; border-top:1px solid #444; font-size:0.9em; opacity:0.7;">
            Previous handprint discarded. Ready for next capture.
          </div>
        </div>
      `),this.render()}updateHandprintList(){const e=document.getElementById("handprintList"),t=document.getElementById("exportHandprints"),n=document.getElementById("clearHandprints");if(this.savedHandprints.length===0){e.innerHTML='<div style="opacity:0.7;">No handprints captured yet.</div>',t.style.display="none",n.style.display="none";return}e.innerHTML=this.savedHandprints.map(s=>{const o=new Date(s.capturedAt).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),r=s.comfortRating||"?";return`
        <div class="handprint-item ${s.hand}">
          <strong>${s.hand.toUpperCase()}</strong> | Comfort: ${r}/100<br/>
          <span style="font-size:0.85em; opacity:0.7;">MIDI ${s.baseMidi} | ${s.orientation} | ${o}</span>
        </div>
      `}).join(""),t.style.display="block",n.style.display="block"}clearAllHandprints(){confirm(`Clear all ${this.savedHandprints.length} handprint(s)?

This cannot be undone!`)&&(this.savedHandprints=[],this.settings.handprints=[],S(this.settings),this.updateHandprintList(),alert("All handprints cleared."))}exportHandprints(){if(this.savedHandprints.length===0){alert("No handprints to export.");return}const e={exportedAt:new Date().toISOString(),handprints:this.savedHandprints},t=JSON.stringify(e,null,2),n=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(n),i=document.createElement("a");i.href=s,i.download=`handprints_${new Date().toISOString().slice(0,19).replace(/:/g,"")}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(s),alert(`Exported ${this.savedHandprints.length} handprint(s) to JSON file.`)}findChordFingeringSuggestions(){const e=[];if(document.querySelectorAll('input[name="chordNote"]:checked').forEach(s=>{e.push(parseInt(s.value))}),e.length<3){const s=document.getElementById("chordSuggestionsStatus");s.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          Please select at least 3 notes for a chord.
        </div>
      `;return}if(e.length>5){const s=document.getElementById("chordSuggestionsStatus");s.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          Please select no more than 5 notes for block chords.
        </div>
      `;return}if(this.savedHandprints.length===0){const s=document.getElementById("chordSuggestionsStatus");s.innerHTML=`
        <div class="warning-box" style="margin-top:8px;">
          No handprints available. Please capture some handprints first.
        </div>
      `;return}const t=ke(e,this.savedHandprints,this.settings.baseMidi);if(t.length===0){const s=document.getElementById("chordSuggestionsStatus");s.innerHTML=`
        <div class="info-box" style="margin-top:8px;">
          No matching fingerings found in your handprints.
          Try capturing more handprint positions.
        </div>
      `,document.getElementById("chordSuggestions").style.display="none";return}const n=Je(t);this.displayChordSuggestions(n,e)}displayChordSuggestions(e,t){const n=document.getElementById("chordSuggestionsStatus"),s=document.getElementById("chordSuggestions"),i=document.getElementById("suggestionsList");n.innerHTML=`
      <div class="success-box" style="margin-top:8px;">
        Found ${e.length} matching fingering${e.length>1?"s":""}!
      </div>
    `;const o=e.slice(0,5);i.innerHTML=o.map((r,d)=>{const c=r.positions.sort((h,g)=>h.finger-g.finger).map(h=>`F${h.finger}`).join("-"),l=[...new Set(r.positions.map(h=>h.pitchClass))].sort((h,g)=>h-g).map(h=>["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][h]).join("-");return`
        <div class="suggestion-item" style="
          background: ${d===0?"#eef":"#f5f5f5"};
          border: 2px solid ${d===0?"#6aa5ff":"#ddd"};
          border-radius: 6px;
          padding: 12px;
          margin-bottom: 8px;
          cursor: pointer;
        " data-suggestion-index="${d}">
          <div style="display:flex; justify-content:space-between; align-items:center; margin-bottom:8px;">
            <strong style="color:#446; font-size:1.1em;">#${d+1} ${l}</strong>
            <span style="background:#446; color:#fff; padding:4px 8px; border-radius:12px; font-size:0.9em; font-weight:bold;">
              ${r.score}
            </span>
          </div>
          <div style="font-size:0.85em; opacity:0.8; margin-bottom:4px;">
            Fingers: ${c} (${r.hand} hand)
          </div>
          <div style="display:flex; gap:8px; font-size:0.75em; opacity:0.7;">
            <span title="Comfort">💆 ${r.comfortScore}</span>
            <span title="Geometry">📐 ${r.geometricScore}</span>
            <span title="Ergonomics">✋ ${r.ergonomicScore}</span>
          </div>
          ${d===0?'<div style="margin-top:8px; font-size:0.85em; color:#446;">⭐ Best match - Click to view on grid</div>':""}
        </div>
      `}).join(""),i.querySelectorAll(".suggestion-item").forEach((r,d)=>{r.addEventListener("click",()=>{this.showSuggestionOnGrid(o[d])})}),s.style.display="block"}showSuggestionOnGrid(e){const t=new E("chord_suggestion");e.positions.forEach(i=>{t.setFingering(i.row,i.col,e.hand,i.finger)}),this.currentPattern=t,this.render();const n=new Set(e.positions.map(i=>i.pitchClass));this.gridRenderer.setHighlightedPCs(n),this.gridRenderer.render();const s=document.getElementById("chordSuggestionsStatus");s.innerHTML=`
      <div class="success-box" style="margin-top:8px;">
        ✓ Showing suggestion on grid. Click "Find Fingerings" to see other options.
      </div>
    `}generateChordSuggestion(){const e=this.getHighlightedPCs();if(e.size===0){alert("No chord selected. Please select a key and chord type first.");return}const t=Array.from(e);if(this.savedHandprints.length===0){alert("No handprints available. Please capture some handprints first.");return}const n=document.getElementById("suggestionHand").value,s=st(t,this.savedHandprints,this.settings.baseMidi,n,10);if(s.length===0){alert("Could not generate suggestions for this chord. Try a different range or capture more handprints.");return}this.currentSuggestions=s,this.currentSuggestionIndex=0,this.displayCurrentSuggestion()}displayCurrentSuggestion(){if(this.currentSuggestions.length===0)return;const e=this.currentSuggestions[this.currentSuggestionIndex],t=new E("synthesized_suggestion");e.positions.forEach(r=>{t.setFingering(r.row,r.col,e.hand,r.finger)}),this.currentPattern=t,this.render();const n=new Set(e.targetPitchClasses);this.gridRenderer.setHighlightedPCs(n),this.gridRenderer.render();const s=document.getElementById("suggestionDisplay"),i=e.targetPitchClasses.sort((r,d)=>r-d).map(r=>["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][r]).join("-"),o=e.positions.sort((r,d)=>r.finger-d.finger).map(r=>(`${r.row}${r.col}`,`
          <div style="display:flex; align-items:center; gap:8px; margin:4px 0;">
            <span style="font-weight:bold;">Finger ${r.finger}:</span>
            <span>r${r.row}c${r.col}</span>
            <button class="change-finger-btn" data-row="${r.row}" data-col="${r.col}" data-current-finger="${r.finger}"
              style="padding:2px 8px; background:#446; color:#fff; border:none; border-radius:3px; cursor:pointer; font-size:0.8em;">
              Change
            </button>
          </div>
        `)).join("");s.innerHTML=`
      <div style="margin-bottom:8px;">
        <strong style="color:#446;">${i}</strong> (${e.hand} hand)
      </div>
      <div style="font-size:0.85em;">
        ${o}
      </div>
      <div style="margin-top:8px; font-size:0.85em; opacity:0.7;">
        Suggestion ${this.currentSuggestionIndex+1} of ${this.currentSuggestions.length}
        • Score: ${Math.round(e.score)}
      </div>
    `,s.querySelectorAll(".change-finger-btn").forEach(r=>{r.addEventListener("click",d=>{d.stopPropagation();const c=parseInt(r.dataset.row),l=parseInt(r.dataset.col),h=parseInt(r.dataset.currentFinger);this.showFingerSelector(c,l,h)})}),document.getElementById("currentSuggestion").style.display="block"}showNextSuggestion(){this.currentSuggestions.length!==0&&(this.currentSuggestionIndex=(this.currentSuggestionIndex+1)%this.currentSuggestions.length,this.displayCurrentSuggestion())}saveSuggestionAsPattern(){if(this.currentSuggestions.length===0)return;const e=this.currentSuggestions[this.currentSuggestionIndex],t=document.getElementById("key").value,n=document.getElementById("set").value,s=document.querySelector(`#set option[value="${n}"]`).textContent,i=`${t} ${s}`,o=new E(i);e.positions.forEach(c=>{o.setFingering(c.row,c.col,e.hand,c.finger)}),o.metadata={key:t,setType:n,baseMidi:this.settings.baseMidi,createdAt:Date.now(),modifiedAt:Date.now(),comfortRating:this.currentSuggestionRating,synthesized:!0,hand:e.hand};const r={...o.toJSON(),...o.metadata},d=JSON.parse(localStorage.getItem("fingeringPatterns")||"{}");d[i]=r,localStorage.setItem("fingeringPatterns",JSON.stringify(d)),this.updatePatternList(),alert(`Saved as "${i}" with comfort rating ${this.currentSuggestionRating}/5`)}showFingerSelector(e,t,n){const s=this.currentSuggestions[this.currentSuggestionIndex],i=new Set(s.positions.map(d=>d.finger));i.delete(n);const o=[];for(let d=1;d<=5;d++){const c=i.has(d),l=d===n,h=l?`${d} (current)`:c?`${d} (used)`:`${d}`,g=c?"disabled":"",m=l?"background:#6aa5ff;":c?"opacity:0.3;":"";o.push(`
        <button onclick="window.app.changeSuggestionFinger(${e}, ${t}, ${d})"
          ${g}
          style="padding:12px 20px; margin:4px; font-size:1.2em; cursor:pointer; border:2px solid #446; border-radius:4px; ${m}">
          ${h}
        </button>
      `)}const r=document.createElement("div");r.id="fingerSelectorModal",r.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
    `,r.innerHTML=`
      <div style="background:#fff; padding:24px; border-radius:8px; box-shadow:0 4px 12px rgba(0,0,0,0.3); max-width:400px;">
        <h3 style="margin:0 0 16px 0; color:#446;">Select Finger for r${e}c${t}</h3>
        <div style="display:flex; flex-wrap:wrap; justify-content:center;">
          ${o.join("")}
        </div>
        <button onclick="document.getElementById('fingerSelectorModal').remove()"
          style="width:100%; margin-top:16px; padding:8px; background:#666; color:#fff; border:none; border-radius:4px; cursor:pointer;">
          Cancel
        </button>
      </div>
    `,document.body.appendChild(r),r.addEventListener("click",d=>{d.target===r&&r.remove()})}changeSuggestionFinger(e,t,n){var r;if(this.currentSuggestions.length===0)return;const s=this.currentSuggestions[this.currentSuggestionIndex],i=s.positions.findIndex(d=>d.row===e&&d.col===t);if(i===-1)return;if(s.positions.some((d,c)=>c!==i&&d.finger===n)){alert(`Finger ${n} is already assigned to another pad. Please choose a different finger.`);return}s.positions[i].finger=n,(r=document.getElementById("fingerSelectorModal"))==null||r.remove(),this.displayCurrentSuggestion()}handleSuggestionEditClick(e,t){if(this.currentSuggestions.length===0)return;const s=this.currentSuggestions[this.currentSuggestionIndex].positions.find(i=>i.row===e&&i.col===t);s&&this.showFingerSelector(e,t,s.finger)}selectChordCaptureHand(e){this.chordCaptureHand=e,document.getElementById("captureLeftHand").classList.toggle("active",e==="left"),document.getElementById("captureRightHand").classList.toggle("active",e==="right")}async startChordCapture(){const e=parseInt(document.getElementById("chordRoot").value),t=document.getElementById("chordQuality").value,n=at(e,t),s=A(e,t);if(this.chordCaptureRoot=e,this.chordCaptureQuality=t,this.chordCapturePitchClasses=n,this.chordCaptureSequence=[],this.chordCaptureState="capturing",this.chordCaptureSessionCount=0,this.lastChordCaptureTime=0,!p.getStatus().isInitialized)try{await p.init(),this.updateMIDIDeviceList(),this.updateMIDIStatus();const o=p.getOutputDevices();if(o.length>0){const d=o.find(c=>c.name.toLowerCase().includes("exquis"))||o[0];p.selectOutputDevice(d.id),document.getElementById("midiDevice").value=d.id,this.updateMIDIStatus(),console.log("[ChordCapture] Auto-selected MIDI device:",d.name)}}catch(o){alert(`Cannot enable MIDI: ${o.message}`);return}if(!p.selectedOutput){alert("Please select a MIDI output device first.");return}const i=p.getDevMode();console.log("[ChordCapture] Dev mode instance:",i),this.chordCaptureActive=!0;try{await i.enter(1),console.log("[ChordCapture] Entered dev mode"),i.highlightChord(n,e,0,0),console.log("[ChordCapture] Highlighted chord:",s,"PCs:",n),i.on("padPress",(o,r)=>{console.log("[ChordCapture] Pad press event:",o,r),this.handleChordCapturePadPress(o,r)}),p.setNoteHandler(()=>{},!0),console.log("[ChordCapture] Enabled MIDI input handler for dev mode"),document.getElementById("chordCaptureStatus").innerHTML=`
        <div class="success-box">
          ✓ Capturing ${s} - Press pads in finger sequence (1→5)
        </div>
      `,document.getElementById("chordCaptureActive").style.display="block",this.updateCaptureProgress()}catch(o){this.chordCaptureActive=!1,alert(`Failed to enter developer mode: ${o.message}`),console.error("Dev mode error:",o)}}handleChordCapturePadPress(e,t){if(console.log("[ChordCapture] handleChordCapturePadPress called:",{padId:e,velocity:t,active:this.chordCaptureActive}),!this.chordCaptureActive){console.log("[ChordCapture] Ignoring pad press - capture not active");return}const n=Date.now();if(this.lastChordCaptureTime||(this.lastChordCaptureTime=0),n-this.lastChordCaptureTime<200){console.log("[ChordCapture] Ignoring - too soon after last capture (debounce)");return}const s=this.chordCaptureSequence.length+1;if(s>5){console.log("[ChordCapture] Ignoring pad press - already have 5 fingers");return}if(this.chordCaptureSequence.some(i=>i.padId===e)){console.log("[ChordCapture] Ignoring duplicate pad:",e);return}this.chordCaptureSequence.push({padId:e,finger:s,timestamp:Date.now(),velocity:t}),this.lastChordCaptureTime=n,console.log("[ChordCapture] Recorded pad press - finger",s,"at pad",e),this.updateCaptureProgress(),this.chordCaptureSequence.length>=5&&(console.log("[ChordCapture] Captured all 5 fingers, finishing..."),setTimeout(()=>{this.finishChordCapture()},300))}updateCaptureProgress(){const e=document.getElementById("captureProgress"),t=this.chordCaptureSequence.length,n=this.chordCaptureSequence.map(s=>`F${s.finger}:Pad${s.padId}`).join(", ");e.innerHTML=`
      Captured: ${t}/5 fingers<br>
      ${n||"Press first pad with finger 1..."}
    `}finishChordCapture(){this.chordCaptureActive&&(this.chordCaptureState="rating",this.chordCaptureSequence.length>=3?this.showChordCaptureRating():(document.getElementById("chordCaptureStatus").innerHTML=`
        <div class="warning-box">
          Not enough fingers captured. Press pads to try again.
        </div>
      `,this.chordCaptureSequence=[],this.chordCaptureState="capturing"))}async stopChordCaptureSession(){if(!this.chordCaptureActive)return;await p.getDevMode().exit(),p.setNoteHandler(null,!1),this.chordCaptureActive=!1,this.chordCaptureState=null,document.getElementById("chordCaptureStatus").innerHTML=`
      <div class="info-box">
        Session complete. Captured ${this.chordCaptureSessionCount} chord fingering(s).
      </div>
    `,document.getElementById("chordCaptureActive").style.display="none",document.getElementById("chordCaptureRate").style.display="none",this.chordCaptureSequence=[],this.chordCaptureSessionCount=0,setTimeout(()=>{document.getElementById("chordCaptureStatus").innerHTML=""},2e3)}async stopChordCapture(){await this.stopChordCaptureSession()}showChordCaptureRating(){document.getElementById("chordCaptureActive").style.display="none",console.log("[ChordCapture] Chord pitch classes:",this.chordCapturePitchClasses),console.log("[ChordCapture] Using baseMidi=0 for dev mode (app setting is",this.settings.baseMidi,"but dev mode is baseMidi-independent)");const e=s=>{let i=0,o=0;for(let l=0;l<11;l++)if(s>=F[l]&&s<F[l]+De(l)){i=l,o=s-F[l];break}const r=I(i,o),d=0+r,c=d%12;return console.log(`[ChordCapture] Pad ${s} → row=${i}, col=${o} → intervals=${r} → MIDI=${d} (baseMidi=0 for dev mode) → PC=${c}`),c},t=document.getElementById("capturedFingeringDisplay"),n=A(this.chordCaptureRoot,this.chordCaptureQuality);t.innerHTML=`
      <strong>${n}</strong> (${this.chordCaptureHand} hand)<br>
      ${this.chordCaptureSequence.map(s=>{const i=e(s.padId),o=this.chordCapturePitchClasses.includes(i);console.log(`[ChordCapture] Pad ${s.padId} PC=${i}, isChordTone=${o}`);const r=o?`Finger ${s.finger}: Pad ${s.padId}`:`Finger ${s.finger}: SKIP (Pad ${s.padId})`;return`<div style="opacity:${o?1:.5}">${r}</div>`}).join("")}
    `,document.getElementById("chordCaptureRate").style.display="block"}saveChordFingering(){const e=parseInt(document.getElementById("captureComfort").value),t=this.chordCaptureSequence.map(s=>({padId:s.padId,finger:s.finger,timestamp:s.timestamp})),n={id:`chord_${Date.now()}`,chordRoot:this.chordCaptureRoot,chordQuality:this.chordCaptureQuality,pitchClasses:this.chordCapturePitchClasses,hand:this.chordCaptureHand,positions:t,comfortRating:e,capturedAt:Date.now()};this.savedChordFingerings.push(n),this.settings.chordFingerings=this.savedChordFingerings,S(this.settings),this.chordCaptureSessionCount++,this.updateChordFingeringList(),A(this.chordCaptureRoot,this.chordCaptureQuality),document.getElementById("chordCaptureStatus").innerHTML=`
      <div class="success-box">
        ✓ Chord fingering ${this.chordCaptureSessionCount} saved! (Comfort: ${e}/5)<br/>
        <strong>Session total:</strong> ${this.chordCaptureSessionCount} fingering(s)
        <div style="margin-top:8px; border-top:1px solid #4a6; padding-top:8px;">
          Press pads to capture another chord fingering,<br/>
          or click "Stop Capture" to finish.
        </div>
      </div>
    `,document.getElementById("chordCaptureRate").style.display="none",document.getElementById("chordCaptureActive").style.display="block",this.chordCaptureSequence=[],this.chordCaptureState="capturing",this.updateCaptureProgress()}discardChordFingering(){document.getElementById("chordCaptureRate").style.display="none",document.getElementById("chordCaptureActive").style.display="block",document.getElementById("chordCaptureStatus").innerHTML=`
      <div class="info-box">
        Fingering discarded. Ready to capture next chord.
      </div>
    `,this.chordCaptureSequence=[],this.chordCaptureState="capturing",this.updateCaptureProgress()}updateChordFingeringList(){const e=document.getElementById("chordFingeringList");if(this.savedChordFingerings.length===0){e.innerHTML='<div style="opacity:0.7;">No chord fingerings captured yet.</div>',document.getElementById("exportChordFingerings").style.display="none",document.getElementById("clearChordFingerings").style.display="none";return}e.innerHTML=this.savedChordFingerings.map((t,n)=>`
        <div style="padding:6px; background:#f5f5f5; border-radius:3px; margin-bottom:4px;">
          <strong>${A(t.chordRoot,t.chordQuality)}</strong> (${t.hand})<br>
          <span style="font-size:0.85em;">
            ${t.positions.length} fingers • Comfort: ${t.comfortRating}/5
          </span>
        </div>
      `).join(""),document.getElementById("exportChordFingerings").style.display="block",document.getElementById("clearChordFingerings").style.display="block"}exportChordFingerings(){if(this.savedChordFingerings.length===0){alert("No chord fingerings to export.");return}const e={exportedAt:new Date().toISOString(),chordFingerings:this.savedChordFingerings},t=JSON.stringify(e,null,2),n=new Blob([t],{type:"application/json"}),s=URL.createObjectURL(n),i=document.createElement("a");i.href=s,i.download=`chord_fingerings_${new Date().toISOString().slice(0,19).replace(/:/g,"")}.json`,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(s),alert(`Exported ${this.savedChordFingerings.length} chord fingering(s) to JSON file.`)}clearAllChordFingerings(){confirm(`Clear all ${this.savedChordFingerings.length} chord fingering(s)?

This cannot be undone!`)&&(this.savedChordFingerings=[],this.settings.chordFingerings=[],S(this.settings),this.updateChordFingeringList(),alert("All chord fingerings cleared."))}}document.addEventListener("DOMContentLoaded",()=>{window.app=new dt});
